[{"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js":"1","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js":"2","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js":"3","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js":"4","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js":"5","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js":"6","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js":"7","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js":"8","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js":"9","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js":"10","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js":"11","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js":"12","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js":"13","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js":"14","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js":"15","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js":"16","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js":"17","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js":"18","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js":"19","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js":"20","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js":"21","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js":"22","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js":"23"},{"size":623,"mtime":1607968639214,"results":"24","hashOfConfig":"25"},{"size":747,"mtime":1610066505127,"results":"26","hashOfConfig":"25"},{"size":5086,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":6052,"mtime":1609187584568,"results":"28","hashOfConfig":"25"},{"size":8072,"mtime":1610018990161,"results":"29","hashOfConfig":"25"},{"size":3250,"mtime":1610148429000,"results":"30","hashOfConfig":"25"},{"size":2119,"mtime":1610119670258,"results":"31","hashOfConfig":"25"},{"size":133,"mtime":1607942477743,"results":"32","hashOfConfig":"25"},{"size":746,"mtime":1608026156042,"results":"33","hashOfConfig":"25"},{"size":354,"mtime":1608577125369,"results":"34","hashOfConfig":"25"},{"size":1229,"mtime":1608655389578,"results":"35","hashOfConfig":"25"},{"size":389,"mtime":1608593179731,"results":"36","hashOfConfig":"25"},{"size":463,"mtime":1608025202294,"results":"37","hashOfConfig":"25"},{"size":4649,"mtime":1610041672555,"results":"38","hashOfConfig":"25"},{"size":11325,"mtime":1610152080142,"results":"39","hashOfConfig":"25"},{"size":1933,"mtime":1610118882306,"results":"40","hashOfConfig":"25"},{"size":4603,"mtime":1610151668995,"results":"41","hashOfConfig":"25"},{"size":1929,"mtime":1610118879911,"results":"42","hashOfConfig":"25"},{"size":4775,"mtime":1610151175846,"results":"43","hashOfConfig":"25"},{"size":133,"mtime":1609187832698,"results":"44","hashOfConfig":"25"},{"size":3246,"mtime":1610041620604,"results":"45","hashOfConfig":"25"},{"size":3789,"mtime":1610120211787,"results":"46","hashOfConfig":"25"},{"size":881,"mtime":1610119211549,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"636ao0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js",[],["101","102"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js",["103","104"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport walletLogo from \"./img/wallet.png\";\r\nimport messengerLogo from \"./img/messenger.png\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    color: \"white\",\r\n    backgroundColor: lightBlue[600],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n  },\r\n  newAccountButton: {\r\n    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n    color: lightBlue[600],\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: lightBlue[800],\r\n      textDecoration: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  // Declare core functions\r\n  const classes = useStyles();\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [displayDescriptionBar, setDisplayDescriptionBar] = useState(true);\r\n\r\n  const [password, setPassword] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [toolDescription, setToolDescription] = useState();\r\n  const [toolSelected, setToolSelected] = useState(false);\r\n\r\n  const handleToolMouseOver = (id) => {\r\n    switch (id) {\r\n      case \"wallet\":\r\n        setToolDescription(\r\n          \"With Happy Wallet, you can record your expenses and have a better control on your money\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      case \"messenger\":\r\n        setToolDescription(\r\n          \"With Happy Messenger, communicate with your friends on a private chat\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleToolMouseOut = (id) => {\r\n    setToolDescription(\"\");\r\n    setToolSelected(false);\r\n  };\r\n  const updateWidth = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidth);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWidth);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <div className={styles.carroussel__container}></div>\r\n      {width >= 960 ? (\r\n        <div className={styles.carroussel__wrapper}>\r\n          <h1 className={styles.title}>\r\n            <span className={styles.capital}>H</span>appy{\" \"}\r\n            <span className={styles.capital}>s</span>uite\r\n          </h1>\r\n          <p className={styles.textDescription}>\r\n            With Happy Suite, create a private space with your friends and your\r\n            family to share personal infomation with the Happy Suite tools\r\n          </p>\r\n\r\n          {/* Series of functionality icons */}\r\n          <div className={styles.toolContainer}>\r\n            <img\r\n              id=\"wallet\"\r\n              className={styles.tool}\r\n              src={walletLogo}\r\n              alt=\"wallet\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n            <img\r\n              id=\"messenger\"\r\n              className={styles.tool}\r\n              src={messengerLogo}\r\n              alt=\"messenger\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n          </div>\r\n          <Slide direction=\"right\" in={toolSelected} mountOnEnter unmountOnExit>\r\n            <p className={styles.functionDescription}>{toolDescription}</p>\r\n          </Slide>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <form className={styles.login__container}>\r\n        <img\r\n          src={HsWhite}\r\n          className={`${styles.logo1} ${classes.space}`}\r\n          alt=\"Hs logo\"\r\n        />\r\n        {/* <img className={styles.logo2} src={HsLightBlue} alt=\"Hs\" /> */}\r\n        <h2>LOG IN</h2>\r\n        <TextField\r\n          className={`${classes.large} ${classes.space}`}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          className={`${classes.large} ${classes.space}`}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <Button className={`${classes.loginButton} ${classes.space}`}>\r\n          LOGIN\r\n        </Button>\r\n        <p className={styles.newAccount}>\r\n          Don't have an account?{\" \"}\r\n          <Link className={classes.newAccountButton} to=\"/signup\">\r\n            Sign Up\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js",["105","106","107"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\n\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue, teal } from \"@material-ui/core/colors\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  signUpButton: {\r\n    color: \"white\",\r\n    backgroundColor: teal[300],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: teal[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: teal[300],\r\n      borderBottomColor: teal[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction SignUp() {\r\n  // Declare core functions\r\n  let classes = useStyles();\r\n  let classesTextField = useStylesTextField();\r\n\r\n  const [password, setPassword] = useState();\r\n  const [password2, setPassword2] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword2, setShowPassword2] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [firstname, setFirstname] = useState();\r\n  const [lastname, setLastname] = useState();\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signUp = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n\r\n    try {\r\n      if (validInput) {\r\n        console.log(\"OK I am here\");\r\n        const credentials = {\r\n          firstname: firstname,\r\n          lastname: lastname,\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signup\", credentials);\r\n\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          history.push(\"/wallet\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setErrorMessages([error.response]);\r\n    }\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(firstname)) {\r\n      messages.push(\"Firstname is empty\");\r\n    }\r\n    if (isEmpty(lastname)) {\r\n      messages.push(\"Lastname is empty\");\r\n    }\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password) || isEmpty(password2)) {\r\n      messages.push(\"Password and/or Confirm Password is empty\");\r\n    } else if (password !== password2) {\r\n      messages.push(\"Error confirming the password\");\r\n    }\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [errorMessages]);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      {/* <div className={styles.carroussel__container}></div> */}\r\n\r\n      <form className={styles.login__container}>\r\n        <Link to=\"/login\">\r\n          <img\r\n            src={HsWhite}\r\n            className={`${styles.logo1} ${classes.space}`}\r\n            alt=\"Hs logo\"\r\n          />\r\n        </Link>\r\n\r\n        {/* <img className={styles.logo2} src={HsLightBlue} alt=\"Hs\" /> */}\r\n        <h1>SIGN UP</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          data-testid=\"inputFirstname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          inputProps={{ value: firstname }}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputLastname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputEmail\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword2\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Confirm Password\"\r\n          type={showPassword2 ? \"text\" : \"password\"}\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword2(!showPassword2)}\r\n                >\r\n                  {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button\r\n          data-testid=\"buttonSignUp\"\r\n          className={`${classes.signUpButton} ${classes.space}`}\r\n          type=\"submit\"\r\n          onClick={(e) => signUp(e)}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js",["108","109","110","111","112","113","114","115","116","117","118","119"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js",["120","121","122","123"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js",["124","125","126"],"import React, { useEffect } from \"react\";\r\nimport styles from \"./WalletExpenseGrid.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setWalletTheme } from \"./features/themeSlice\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction Loader() {\r\n  const themeWallet = useSelector((state) => state.theme).wallet;\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    progress: {\r\n      margin: \"auto\",\r\n      color: themeWallet,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={styles.walletExpenseGrid}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js",["127"],"import React, { useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  teal,\r\n  blue,\r\n  cyan,\r\n  amber,\r\n  grey,\r\n  deepOrange,\r\n} from \"@material-ui/core/colors\";\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n  },\r\n  gridElement: {\r\n    gridColumnStart: 1,\r\n    \"&:focus\": { outline: \"none\" },\r\n  },\r\n  color1: {\r\n    backgroundColor: teal[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: teal[500],\r\n    },\r\n  },\r\n  color2: {\r\n    backgroundColor: blue[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: blue[500],\r\n    },\r\n  },\r\n  color3: {\r\n    backgroundColor: cyan[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: cyan[500],\r\n    },\r\n  },\r\n  color4: {\r\n    backgroundColor: amber[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: amber[500],\r\n    },\r\n  },\r\n  color5: {\r\n    backgroundColor: grey[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: grey[500],\r\n    },\r\n  },\r\n  color6: {\r\n    backgroundColor: deepOrange[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n  },\r\n  menuList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: 152,\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nexport default function MenuTheme() {\r\n  const colorPalette = [1, 2, 3, 4, 5, 6];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        className={classes.gridElement}\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <ColorLensIcon className={classes.appBarIcon} />\r\n      </IconButton>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  className={classes.menuList}\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  {colorPalette.map((colorNum) => (\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes[\"color\" + colorNum]}\r\n                    />\r\n                  ))}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js",["128","129","130","131","132"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js",["133","134","135"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js",["136","137","138","139","140","141"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js",["142","143","144"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { PlayCircleFilledWhite } from \"@material-ui/icons\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto [row1] 1fr [row2]\",\r\n    gridTemplateColumns: \"1fr [col1] auto [col2]\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    backgroundColor: teal[400],\r\n    color: \"white\",\r\n    [theme.breakpoints.down(800)]: {\r\n      gridColumn: \"2 / 3\",\r\n      gridRow: \"1 / 2\",\r\n    },\r\n  },\r\n  elem1: {\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"1 / 1\",\r\n  },\r\n  elem2: {\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 2\",\r\n  },\r\n  icon: {\r\n    gridColumn: \"2 / 2\",\r\n    gridRow: \"1 / span 2\",\r\n    color: \"white\",\r\n    width: 50,\r\n    height: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nfunction WalletTotalEarnings() {\r\n  //useStyles\r\n  const classes = useStyles();\r\n  // useState\r\n  const [total, setTotal] = useState();\r\n\r\n  // useSelector\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  // Functions\r\n  const getTotalSubExpenses = () => {\r\n    let result = 0;\r\n    if (!isEmpty(subExpenses)) {\r\n      for (let expense of subExpenses) {\r\n        result += expense.amount;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  //useEffect\r\n\r\n  useEffect(() => {\r\n    setTotal(getTotalSubExpenses());\r\n  }, [subExpenses]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <h4 className={classes.elem1}>Total Earnings </h4>\r\n      <h2>{total} EUR</h2>\r\n      <MonetizationOnIcon className={classes.icon} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTotalEarnings;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js",["145","146","147","148","149","150"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js",["151","152","153","154","155","156"],"import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n} from \"./features/expensesSlice\";\r\n\r\n// Import Design elements + Material-UI\r\nimport styles from \"./WalletNavBar.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MenuTheme from \"./MenuTheme\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport walletLogo from \"./img/wallet.png\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n// Define Styles Material-UI\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    gridColumnStart: 1,\r\n    gridRowStart: 1,\r\n    backgroundColor: teal[600],\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rowSection: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  logo: {\r\n    position: \"relative\",\r\n    width: 40,\r\n    height: 40,\r\n    marginRight: 5,\r\n  },\r\n  titleLogo: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  date: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    margin: \"0px 10px 0px 10px\",\r\n  },\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    focusVisible: false,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n  },\r\n  gridElement1: { gridColumnStart: 1, \"&:focus\": { outline: \"none\" } },\r\n  gridElement2: { gridColumnStart: 2, \"&:focus\": { outline: \"none\" } },\r\n  gridElement3: { gridColumnStart: 3, \"&:focus\": { outline: \"none\" } },\r\n}));\r\n\r\nfunction WalletNavBar() {\r\n  //useStyles from Material-UI\r\n  const classes = useStyles();\r\n\r\n  // Redux : dispatch and selectors\r\n  const dateFromSelector = useSelector((state) => state.expenses.dateFrom);\r\n  const dateToSelector = useSelector((state) => state.expenses.dateTo);\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolBar}>\r\n        <div className={classes.rowSection}>\r\n          <img src={walletLogo} alt=\"logo\" className={classes.logo} />\r\n          <h1 className={classes.titleLogo}>Wallet</h1>\r\n        </div>\r\n        <div className={classes.rowSection}>\r\n          <h2 className={classes.date}>{dateFromSelector}</h2>\r\n          <h2 className={classes.date}>{dateToSelector}</h2>\r\n        </div>\r\n        <div className={styles.gridSection}>\r\n          <MenuTheme />\r\n          <IconButton size=\"small\" className={classes.gridElement2}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <ChatIcon className={classes.appBarIcon} />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton size=\"small\" className={classes.gridElement3}>\r\n            <Badge badgeContent=\"\" color=\"secondary\">\r\n              <AccountCircleIcon className={classes.appBarIcon} />\r\n            </Badge>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default WalletNavBar;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js",["157","158","159","160","161","162"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js",["163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":60,"column":10,"nodeType":"170","messageId":"171","endLine":60,"endColumn":31},{"ruleId":"168","severity":1,"message":"172","line":60,"column":33,"nodeType":"170","messageId":"171","endLine":60,"endColumn":57},{"ruleId":"168","severity":1,"message":"173","line":8,"column":22,"nodeType":"170","messageId":"171","endLine":8,"endColumn":35},{"ruleId":"168","severity":1,"message":"174","line":15,"column":10,"nodeType":"170","messageId":"171","endLine":15,"endColumn":19},{"ruleId":"168","severity":1,"message":"175","line":17,"column":10,"nodeType":"170","messageId":"171","endLine":17,"endColumn":20},{"ruleId":"168","severity":1,"message":"176","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":15},{"ruleId":"168","severity":1,"message":"177","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},{"ruleId":"168","severity":1,"message":"178","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":15},{"ruleId":"168","severity":1,"message":"179","line":17,"column":3,"nodeType":"170","messageId":"171","endLine":17,"endColumn":14},{"ruleId":"168","severity":1,"message":"180","line":18,"column":3,"nodeType":"170","messageId":"171","endLine":18,"endColumn":12},{"ruleId":"168","severity":1,"message":"181","line":19,"column":3,"nodeType":"170","messageId":"171","endLine":19,"endColumn":17},{"ruleId":"168","severity":1,"message":"182","line":26,"column":16,"nodeType":"170","messageId":"171","endLine":26,"endColumn":26},{"ruleId":"168","severity":1,"message":"183","line":60,"column":9,"nodeType":"170","messageId":"171","endLine":60,"endColumn":16},{"ruleId":"168","severity":1,"message":"184","line":63,"column":10,"nodeType":"170","messageId":"171","endLine":63,"endColumn":19},{"ruleId":"168","severity":1,"message":"185","line":68,"column":9,"nodeType":"170","messageId":"171","endLine":68,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":101,"column":6,"nodeType":"188","endLine":101,"endColumn":14,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":115,"column":27,"nodeType":"192","endLine":115,"endColumn":51},{"ruleId":"168","severity":1,"message":"193","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"178","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":15},{"ruleId":"168","severity":1,"message":"194","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"195","line":25,"column":21,"nodeType":"170","messageId":"171","endLine":25,"endColumn":33},{"ruleId":"168","severity":1,"message":"193","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"196","line":3,"column":23,"nodeType":"170","messageId":"171","endLine":3,"endColumn":34},{"ruleId":"168","severity":1,"message":"197","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":24},{"ruleId":"168","severity":1,"message":"198","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"199","line":5,"column":3,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"200","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":27},{"ruleId":"168","severity":1,"message":"201","line":16,"column":29,"nodeType":"170","messageId":"171","endLine":16,"endColumn":43},{"ruleId":"168","severity":1,"message":"202","line":28,"column":8,"nodeType":"170","messageId":"171","endLine":28,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":29,"column":8,"nodeType":"170","messageId":"171","endLine":29,"endColumn":14},{"ruleId":"168","severity":1,"message":"204","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":31},{"ruleId":"168","severity":1,"message":"205","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":14},{"ruleId":"186","severity":1,"message":"206","line":66,"column":6,"nodeType":"188","endLine":66,"endColumn":19,"suggestions":"207"},{"ruleId":"168","severity":1,"message":"208","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":14},{"ruleId":"168","severity":1,"message":"209","line":19,"column":3,"nodeType":"170","messageId":"171","endLine":19,"endColumn":7},{"ruleId":"168","severity":1,"message":"210","line":21,"column":10,"nodeType":"170","messageId":"171","endLine":21,"endColumn":30},{"ruleId":"168","severity":1,"message":"200","line":22,"column":10,"nodeType":"170","messageId":"171","endLine":22,"endColumn":27},{"ruleId":"168","severity":1,"message":"211","line":95,"column":9,"nodeType":"170","messageId":"171","endLine":95,"endColumn":24},{"ruleId":"186","severity":1,"message":"212","line":169,"column":6,"nodeType":"188","endLine":169,"endColumn":19,"suggestions":"213"},{"ruleId":"168","severity":1,"message":"204","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":31},{"ruleId":"168","severity":1,"message":"182","line":7,"column":16,"nodeType":"170","messageId":"171","endLine":7,"endColumn":26},{"ruleId":"186","severity":1,"message":"206","line":63,"column":6,"nodeType":"188","endLine":63,"endColumn":19,"suggestions":"214"},{"ruleId":"168","severity":1,"message":"208","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":14},{"ruleId":"168","severity":1,"message":"215","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":15},{"ruleId":"168","severity":1,"message":"210","line":12,"column":10,"nodeType":"170","messageId":"171","endLine":12,"endColumn":30},{"ruleId":"168","severity":1,"message":"216","line":13,"column":10,"nodeType":"170","messageId":"171","endLine":13,"endColumn":26},{"ruleId":"168","severity":1,"message":"211","line":69,"column":9,"nodeType":"170","messageId":"171","endLine":69,"endColumn":24},{"ruleId":"168","severity":1,"message":"217","line":75,"column":19,"nodeType":"170","messageId":"171","endLine":75,"endColumn":29},{"ruleId":"168","severity":1,"message":"196","line":3,"column":23,"nodeType":"170","messageId":"171","endLine":3,"endColumn":34},{"ruleId":"168","severity":1,"message":"199","line":5,"column":3,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"179","line":6,"column":3,"nodeType":"170","messageId":"171","endLine":6,"endColumn":14},{"ruleId":"168","severity":1,"message":"180","line":7,"column":3,"nodeType":"170","messageId":"171","endLine":7,"endColumn":12},{"ruleId":"168","severity":1,"message":"181","line":8,"column":3,"nodeType":"170","messageId":"171","endLine":8,"endColumn":17},{"ruleId":"168","severity":1,"message":"218","line":21,"column":8,"nodeType":"170","messageId":"171","endLine":21,"endColumn":16},{"ruleId":"168","severity":1,"message":"219","line":1,"column":36,"nodeType":"170","messageId":"171","endLine":1,"endColumn":44},{"ruleId":"168","severity":1,"message":"199","line":6,"column":3,"nodeType":"170","messageId":"171","endLine":6,"endColumn":14},{"ruleId":"168","severity":1,"message":"220","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":24},{"ruleId":"168","severity":1,"message":"221","line":18,"column":8,"nodeType":"170","messageId":"171","endLine":18,"endColumn":19},{"ruleId":"168","severity":1,"message":"222","line":82,"column":9,"nodeType":"170","messageId":"171","endLine":82,"endColumn":20},{"ruleId":"186","severity":1,"message":"223","line":120,"column":6,"nodeType":"188","endLine":120,"endColumn":16,"suggestions":"224"},{"ruleId":"168","severity":1,"message":"195","line":15,"column":21,"nodeType":"170","messageId":"171","endLine":15,"endColumn":33},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'displayDescriptionBar' is assigned a value but never used.","Identifier","unusedVar","'setDisplayDescriptionBar' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'lightBlue' is defined but never used.","'FilterNone' is defined but never used.","'Badge' is defined but never used.","'useRef' is defined but never used.","'isEmpty' is defined but never used.","'setDateFrom' is defined but never used.","'setDateTo' is defined but never used.","'setSubExpenses' is defined but never used.","'deepOrange' is defined but never used.","'classes' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'alertAdd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["227"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","'useEffect' is defined but never used.","'moment' is defined but never used.","'setIsLoading' is assigned a value but never used.","'useDispatch' is defined but never used.","'setWalletTheme' is defined but never used.","'Button' is defined but never used.","'setExpenses' is defined but never used.","'CenterFocusStrong' is defined but never used.","'FullscreenExit' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'PlayCircleFilledWhite' is defined but never used.","'teal' is defined but never used.","React Hook useEffect has a missing dependency: 'getTotalSubExpenses'. Either include it or remove the dependency array.",["228"],"'styles' is defined but never used.","'blue' is defined but never used.","'relativeTimeRounding' is defined but never used.","'ExpenseChartRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colorList'. Either include it or remove the dependency array.",["229"],["230"],"'classes' is defined but never used.","'ImportantDevices' is defined but never used.","'setOptions' is assigned a value but never used.","'Snackbar' is defined but never used.","'useState' is defined but never used.","'WalletNewExpense' is defined but never used.","'ButtonGroup' is defined but never used.","'subExpenses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectData'. Either include it or remove the dependency array.",["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"234","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [dispatch, reload]",{"range":"241","text":"242"},"Update the dependencies array to be: [getTotalSubExpenses, subExpenses]",{"range":"243","text":"244"},"Update the dependencies array to be: [colorList, subExpenses]",{"range":"245","text":"246"},{"range":"247","text":"244"},"Update the dependencies array to be: [expenses, selectData]",{"range":"248","text":"249"},[2797,2805],"[dispatch, reload]",[1656,1669],"[getTotalSubExpenses, subExpenses]",[4269,4282],"[colorList, subExpenses]",[1553,1566],[2987,2997],"[expenses, selectData]"]