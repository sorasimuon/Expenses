[{"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js":"1","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js":"2","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js":"3","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js":"4","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js":"5","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js":"6","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js":"7","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js":"8","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js":"9","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js":"10","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js":"11","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js":"12","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js":"13","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js":"14","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js":"15","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js":"16","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js":"17","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js":"18","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js":"19","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js":"20","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js":"21","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js":"22","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js":"23","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewEarnings.js":"24","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\earningsSlice.js":"25","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuUser.js":"26","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login2.js":"27"},{"size":623,"mtime":1607968639214,"results":"28","hashOfConfig":"29"},{"size":949,"mtime":1611276216154,"results":"30","hashOfConfig":"29"},{"size":5086,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":9775,"mtime":1610808622884,"results":"32","hashOfConfig":"29"},{"size":8296,"mtime":1610808041096,"results":"33","hashOfConfig":"29"},{"size":4659,"mtime":1610730639245,"results":"34","hashOfConfig":"29"},{"size":2155,"mtime":1611251258473,"results":"35","hashOfConfig":"29"},{"size":194,"mtime":1610794480915,"results":"36","hashOfConfig":"29"},{"size":746,"mtime":1608026156042,"results":"37","hashOfConfig":"29"},{"size":444,"mtime":1610383582773,"results":"38","hashOfConfig":"29"},{"size":1239,"mtime":1611422473470,"results":"39","hashOfConfig":"29"},{"size":573,"mtime":1610724787963,"results":"40","hashOfConfig":"29"},{"size":463,"mtime":1608025202294,"results":"41","hashOfConfig":"29"},{"size":4716,"mtime":1610378124014,"results":"42","hashOfConfig":"29"},{"size":12390,"mtime":1611426728038,"results":"43","hashOfConfig":"29"},{"size":2012,"mtime":1610376960811,"results":"44","hashOfConfig":"29"},{"size":4909,"mtime":1611249863254,"results":"45","hashOfConfig":"29"},{"size":2197,"mtime":1610384934949,"results":"46","hashOfConfig":"29"},{"size":5157,"mtime":1610802201172,"results":"47","hashOfConfig":"29"},{"size":194,"mtime":1610794487029,"results":"48","hashOfConfig":"29"},{"size":4095,"mtime":1611412702478,"results":"49","hashOfConfig":"29"},{"size":5703,"mtime":1611425821543,"results":"50","hashOfConfig":"29"},{"size":881,"mtime":1610119211549,"results":"51","hashOfConfig":"29"},{"size":10250,"mtime":1611426640487,"results":"52","hashOfConfig":"29"},{"size":1303,"mtime":1611422498258,"results":"53","hashOfConfig":"29"},{"size":4727,"mtime":1610808019395,"results":"54","hashOfConfig":"29"},{"size":844,"mtime":1611420856692,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"636ao0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js",[],["123","124"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js",["125","126","127","128"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser } from \"./features/userSlice\";\r\n\r\n// Import for Styling and Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport walletLogo from \"./img/wallet.png\";\r\nimport messengerLogo from \"./img/messenger.png\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    color: \"white\",\r\n    backgroundColor: lightBlue[600],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 4,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n    [theme.breakpoints.down(420)]: {\r\n      height: 32,\r\n    },\r\n  },\r\n  newAccountButton: {\r\n    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n    color: lightBlue[600],\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: lightBlue[800],\r\n      textDecoration: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: lightBlue[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: lightBlue[300],\r\n      borderBottomColor: lightBlue[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction Login() {\r\n  // Declare core functions\r\n  const classes = useStyles();\r\n  const classesTextField = useStylesTextField();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [displayDescriptionBar, setDisplayDescriptionBar] = useState(true);\r\n\r\n  const [password, setPassword] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [toolDescription, setToolDescription] = useState();\r\n  const [toolSelected, setToolSelected] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const [disabledSignIn, setDisableSignIn] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n    setDisableSignIn(true);\r\n\r\n    try {\r\n      if (validInput) {\r\n        const credentials = {\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signin\", credentials);\r\n        if (!response.error) {\r\n          console.log(\"connected\");\r\n          dispatch(setUser(response.data));\r\n          history.push(\"/Expenses/wallet\");\r\n        } else {\r\n          console.log(response.error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.toString() == \"Error: Network Error\") {\r\n        setErrorMessages([\"Error connection to server\"]);\r\n      } else {\r\n        setErrorMessages([error.response]);\r\n      }\r\n    } finally {\r\n      setDisableSignIn(false);\r\n    }\r\n  };\r\n\r\n  const handleToolMouseOver = (id) => {\r\n    switch (id) {\r\n      case \"wallet\":\r\n        setToolDescription(\r\n          \"With Happy Wallet, you can record your expenses and have a better control on your money\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      case \"messenger\":\r\n        setToolDescription(\r\n          \"With Happy Messenger, communicate with your friends on a private chat\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleToolMouseOut = (id) => {\r\n    setToolDescription(\"\");\r\n    setToolSelected(false);\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password)) {\r\n      messages.push(\"Password  is empty\");\r\n    }\r\n\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const updateWidth = () => {\r\n      if (isMounted) {\r\n        setWidth(window.innerWidth);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    console.log(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n\r\n      window.removeEventListener(\"resize\", updateWidth);\r\n      console.log(isMounted);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <div className={styles.carroussel__container} />\r\n      {width >= 960 ? (\r\n        <div className={styles.carroussel__wrapper}>\r\n          <h1 className={styles.title}>\r\n            <span className={styles.capital}>H</span>appy{\" \"}\r\n            <span className={styles.capital}>s</span>uite\r\n          </h1>\r\n          <p className={styles.textDescription}>\r\n            With Happy Suite, create a private space with your friends and your\r\n            family to share personal infomation with the Happy Suite tools\r\n          </p>\r\n\r\n          {/* Series of functionality icons */}\r\n          <div className={styles.toolContainer}>\r\n            <img\r\n              id=\"wallet\"\r\n              className={styles.tool}\r\n              src={walletLogo}\r\n              alt=\"wallet\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n            <img\r\n              id=\"messenger\"\r\n              className={styles.tool}\r\n              src={messengerLogo}\r\n              alt=\"messenger\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n          </div>\r\n          <Slide direction=\"right\" in={toolSelected} mountOnEnter unmountOnExit>\r\n            <p className={styles.functionDescription}>{toolDescription}</p>\r\n          </Slide>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <form className={styles.login__container}>\r\n        <img\r\n          src={HsWhite}\r\n          className={`${styles.logo1} ${classes.space}`}\r\n          alt=\"Hs logo\"\r\n        />\r\n        <h1 className={styles.subject}>LOG IN</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          // value={email || \"\"}\r\n          inputProps={{ value: email || \"\" }}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          // value={password || \"\"}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            value: password || \"\",\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          disabled={disabledSignIn}\r\n          className={`${classes.loginButton} ${classes.space}`}\r\n          onClick={(e) => signIn(e)}\r\n        >\r\n          LOGIN\r\n          {disabledSignIn && <CircularProgress style={{ color: \"white\" }} />}\r\n        </Button>\r\n        <p className={styles.newAccount}>\r\n          Don't have an account?{\" \"}\r\n          <Link className={classes.newAccountButton} to=\"/Expenses/signup\">\r\n            Sign Up\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js",["129","130","131","132"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { setUser } from \"./features/userSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue, teal } from \"@material-ui/core/colors\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  signUpButton: {\r\n    color: \"white\",\r\n    backgroundColor: teal[300],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: teal[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: teal[300],\r\n      borderBottomColor: teal[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction SignUp() {\r\n  // Declare core functions\r\n  let classes = useStyles();\r\n  let classesTextField = useStylesTextField();\r\n\r\n  const [password, setPassword] = useState();\r\n  const [password2, setPassword2] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword2, setShowPassword2] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [firstname, setFirstname] = useState();\r\n  const [lastname, setLastname] = useState();\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signUp = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n\r\n    try {\r\n      if (validInput) {\r\n        const credentials = {\r\n          firstname: firstname,\r\n          lastname: lastname,\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signup\", credentials);\r\n\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          console.log(response.data);\r\n          dispatch(setUser(response.data));\r\n          history.push(\"/Expenses/wallet\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setErrorMessages([error.response.data]);\r\n    }\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(firstname)) {\r\n      messages.push(\"Firstname is empty\");\r\n    }\r\n    if (isEmpty(lastname)) {\r\n      messages.push(\"Lastname is empty\");\r\n    }\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password) || isEmpty(password2)) {\r\n      messages.push(\"Password and/or Confirm Password is empty\");\r\n    } else if (password !== password2) {\r\n      messages.push(\"Error confirming the password\");\r\n    }\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [errorMessages]);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      {/* <div className={styles.carroussel__container}></div> */}\r\n\r\n      <form className={styles.login__container}>\r\n        <Link to=\"/Expenses/login\">\r\n          <img\r\n            src={HsWhite}\r\n            className={`${styles.logo1} ${classes.space}`}\r\n            alt=\"Hs logo\"\r\n          />\r\n        </Link>\r\n\r\n        {/* <img className={styles.logo2} src={HsLightBlue} alt=\"Hs\" /> */}\r\n        <h1>SIGN UP</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          data-testid=\"inputFirstname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          inputProps={{ value: firstname }}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputLastname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputEmail\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword2\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Confirm Password\"\r\n          type={showPassword2 ? \"text\" : \"password\"}\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword2(!showPassword2)}\r\n                >\r\n                  {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button\r\n          data-testid=\"buttonSignUp\"\r\n          className={`${classes.signUpButton} ${classes.space}`}\r\n          type=\"submit\"\r\n          onClick={(e) => signUp(e)}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import { Badge } from \"@material-ui/core\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\n// Import React Components\r\nimport WalletNavBar from \"./WalletNavBar\";\r\nimport WalletTimeFilter from \"./WalletTimeFilter\";\r\nimport WalletMainContainer from \"./WalletMainContainer\";\r\nimport WalletNewExpense from \"./WalletNewExpense\";\r\nimport WalletNewEarnings from \"./WalletNewEarnings\";\r\n\r\nimport isEmpty from \"is-empty\";\r\nimport axiosExpenses from \"./apis/axiosExpenses\";\r\n\r\n// Import related to Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n} from \"./features/expensesSlice\";\r\nimport {\r\n  setEarnings,\r\n  setDateFromEarnings,\r\n  setDateToEarnings,\r\n  setSubEarnings,\r\n} from \"./features/earningsSlice\";\r\nimport { setUser } from \"./features/userSlice\";\r\n\r\n// Import Styling + Material-UI\r\nimport styles from \"./Wallet2.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  searchIconWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  searchBar: {\r\n    display: \"flex\",\r\n    backgroundColor: teal[400],\r\n    borderRadius: 4,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[300],\r\n    },\r\n  },\r\n  rowChart: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nfunction Wallet() {\r\n  const classes = useStyles();\r\n\r\n  // useState variables\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorEarnings, setErrorEarnings] = useState([]);\r\n  const [errorExpenses, setErrorExpenses] = useState([]);\r\n\r\n  // Redux : dispatch and selectors\r\n  const dispatch = useDispatch();\r\n  const reload = useSelector((state) => state.expenses.reload);\r\n  const alertAdd = useSelector((state) => state.expenses.alertAdd);\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // other Hooks\r\n  const history = useHistory();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    // Fetch earnings from DB\r\n    (async () => {\r\n      try {\r\n        const URL = `/earnings?userId=${userId}`;\r\n        setIsLoading(true);\r\n        const response = await axiosExpenses.get(URL);\r\n        setIsLoading(false);\r\n\r\n        const content = [];\r\n        for (let earning of response.data) {\r\n          let temp = {};\r\n          temp.id = earning._id;\r\n          temp.userId = earning.userId;\r\n          temp.date = parseInt(earning.date);\r\n          temp.name = earning.name;\r\n          temp.source_type = earning.source_type;\r\n          temp.type = earning.type;\r\n          temp.amount = parseFloat(earning.amount);\r\n          temp.currency = earning.currency;\r\n          delete earning._id;\r\n          content.push(temp);\r\n        }\r\n        dispatch(setEarnings(content));\r\n      } catch (error) {\r\n        switch (error.response.status) {\r\n          case 400:\r\n            console.log(\"Result not found for this user\");\r\n            setErrorEarnings(\"No data \");\r\n\r\n            break;\r\n          default:\r\n            console.log(\r\n              \"Oops, Somthing wrong happened during request Earnings\"\r\n            );\r\n            setErrorEarnings(\"Error on request\");\r\n        }\r\n      }\r\n    })();\r\n\r\n    // Fetch expenses from DB\r\n    (async () => {\r\n      try {\r\n        const URL = `/expenses?userId=${userId}`;\r\n        setIsLoading(true);\r\n\r\n        const response = await axiosExpenses.get(URL);\r\n        setIsLoading(false);\r\n\r\n        const content = [];\r\n        for (let expense of response.data) {\r\n          let temp = {};\r\n          temp.id = expense._id;\r\n          temp.userId = expense.userId;\r\n          temp.date = parseInt(expense.date);\r\n          temp.name = expense.name;\r\n          temp.categories = expense.categories;\r\n          temp.source_type = expense.source_type;\r\n          temp.type = expense.type;\r\n          temp.amount = parseFloat(expense.amount);\r\n          temp.currency = expense.currency;\r\n          delete expense._id;\r\n          content.push(temp);\r\n        }\r\n        dispatch(setExpenses(content));\r\n      } catch (error) {}\r\n    })();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div className={styles.wallet}>\r\n      <WalletNavBar />\r\n      <div className={styles.filterContainer}>\r\n        <WalletTimeFilter />\r\n      </div>\r\n      <WalletMainContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wallet;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js",["155","156","157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport isEmpty from \"is-empty\";\r\nimport Loader from \"./Loader\";\r\nimport moment from \"moment\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    overflow: \"auto\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    gridColumn: \"1 / 3\",\r\n    gridRow: \"3 / 4\",\r\n    minHeight: 240,\r\n    height: \"auto\",\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"4 / 5\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"5 / 6\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction WalletExpenseGrid() {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // selectors Redux\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  // rows\r\n  const rows = [];\r\n  for (let expense of subExpenses) {\r\n    const temp = {};\r\n    temp.id = expense.id;\r\n    temp.userId = expense.userId;\r\n    let date = new Date(expense.date);\r\n    temp.date = date;\r\n    temp.name = expense.name;\r\n    temp.amount = expense.amount;\r\n    temp.categories = expense.categories;\r\n    temp.currency = expense.currency;\r\n    temp.type = expense.type;\r\n    temp.source_type = expense.source_type;\r\n    rows.push(temp);\r\n  }\r\n\r\n  // columns\r\n  const columns = [\r\n    { field: \"name\", headerName: \"NAME\", width: 300 },\r\n    { field: \"date\", headerName: \"DATE\", width: 300 },\r\n    { field: \"categories\", headerName: \"CATEGORIES\", width: 300 },\r\n    { field: \"amount\", headerName: \"AMOUNT\", width: 300 },\r\n    { field: \"currency\", headerName: \"CURRENCY\", width: 300 },\r\n    { field: \"type\", headerName: \"TYPE\", width: 300 },\r\n    { field: \"source_type\", headerName: \"SOURCE TYPE\", width: 300 },\r\n  ];\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  // Fulfill column names\r\n\r\n  return (\r\n    <div className={classes.grid}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={10} checkboxSelection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletExpenseGrid;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js",["159","160","161"],"import React, { useEffect } from \"react\";\r\nimport styles from \"./WalletExpenseGrid.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setWalletTheme } from \"./features/themeSlice\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction Loader() {\r\n  const themeWallet = useSelector((state) => state.theme).wallet;\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    progress: {\r\n      margin: \"auto\",\r\n      color: themeWallet,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={styles.walletExpenseGrid}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js",["162"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js",["163"],"import React, { useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  teal,\r\n  blue,\r\n  cyan,\r\n  amber,\r\n  grey,\r\n  deepOrange,\r\n} from \"@material-ui/core/colors\";\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n  gridElement: {\r\n    gridColumnStart: 1,\r\n    \"&:focus\": { outline: \"none\" },\r\n  },\r\n  color1: {\r\n    backgroundColor: teal[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: teal[500],\r\n    },\r\n  },\r\n  color2: {\r\n    backgroundColor: blue[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: blue[500],\r\n    },\r\n  },\r\n  color3: {\r\n    backgroundColor: cyan[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: cyan[500],\r\n    },\r\n  },\r\n  color4: {\r\n    backgroundColor: amber[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: amber[500],\r\n    },\r\n  },\r\n  color5: {\r\n    backgroundColor: grey[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: grey[500],\r\n    },\r\n  },\r\n  color6: {\r\n    backgroundColor: deepOrange[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n  },\r\n  menuList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: 152,\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nexport default function MenuTheme() {\r\n  const colorPalette = [1, 2, 3, 4, 5, 6];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        className={classes.gridElement}\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <ColorLensIcon className={classes.appBarIcon} />\r\n      </IconButton>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  className={classes.menuList}\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  {colorPalette.map((colorNum) => (\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes[\"color\" + colorNum]}\r\n                    />\r\n                  ))}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js",["164","165","166","167","168","169","170","171"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js",["172","173","174","175"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import React Components\r\nimport WalletNewExpense from \"./WalletNewExpense\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { PlayCircleFilledWhite } from \"@material-ui/icons\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto [row1] 1fr [row2]\",\r\n    gridTemplateColumns: \"1fr [col1] auto [col2]\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    backgroundColor: deepOrange[400],\r\n    color: \"white\",\r\n    [theme.breakpoints.down(601)]: {\r\n      gridColumn: \"1 / 2\",\r\n      gridRow: \"1 / 2\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"1 / 1\",\r\n    },\r\n  },\r\n  elem1: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"1 / 1\",\r\n  },\r\n  elem2: {\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 2\",\r\n  },\r\n}));\r\n\r\nfunction WalletTotalExpenses() {\r\n  //useStyles\r\n  const classes = useStyles();\r\n  // useState\r\n  const [total, setTotal] = useState();\r\n\r\n  // useSelector\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  // Functions\r\n  const getTotalSubExpenses = () => {\r\n    let result = 0;\r\n    if (!isEmpty(subExpenses)) {\r\n      for (let expense of subExpenses) {\r\n        result += expense.amount;\r\n      }\r\n    }\r\n    return Math.round(result * 100) / 100;\r\n  };\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    setTotal(getTotalSubExpenses());\r\n  }, [subExpenses]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <h5 className={classes.elem1}>Total Expenses </h5>\r\n      <WalletNewExpense />\r\n      <h2>{!isEmpty(total) && total}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTotalExpenses;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js",["176","177","178","179","180","181"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport Loader from \"./Loader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./PieChart.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  red,\r\n  deepPurple,\r\n  indigo,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lime,\r\n  yellow,\r\n  deepOrange,\r\n  blue,\r\n} from \"@material-ui/core/colors\";\r\nimport { relativeTimeRounding } from \"moment\";\r\nimport { CenterFocusStrong } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // box: {\r\n  //   position: \"relative\",\r\n  //   display: \"flex\",\r\n  //   flexDirection: \"column\",\r\n  //   justifyContent: \"flex-start\",\r\n  //   alignItems: \"flex-start\",\r\n  //   boxShadow: \"0 0 20px 0 rgba(50, 50, 50, 0.7)\",\r\n  //   borderRadius: 4,\r\n  //   padding: 30,\r\n  //   backgroundColor: indigo[300],\r\n  //   alignSelf: \"stretch !important\",\r\n  // },\r\n  // title: {\r\n  //   color: \"white\",\r\n  //   marginBottom: 20,\r\n  // },\r\n  // canvasContainer: {\r\n  //   position: \"relative\",\r\n  //   width: \"80% !important\",\r\n  //   height: \"80% !important\",\r\n  //   margin: \"auto\",\r\n  // },\r\n\r\n  box: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr [col1]\",\r\n    gridTemplateRows: \"48px [row1] 1fr [row2]\",\r\n    boxShadow: \"0 0 20px 0 rgba(100, 100, 100, 0.7)\",\r\n    borderRadius: 4,\r\n    padding: 30,\r\n    backgroundColor: deepPurple[200],\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"3 / 4\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"4 / 5\",\r\n    },\r\n  },\r\n  title: {\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"1 / 1\",\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  canvasContainer: {\r\n    position: \"relative\",\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"2 / 2\",\r\n    width: \"100% !important\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nfunction PieChart() {\r\n  // List of colors\r\n  const colorList = [\r\n    { bcg: red[300], border: red[700] },\r\n    { bcg: deepPurple[300], border: deepPurple[700] },\r\n    { bcg: indigo[300], border: indigo[700] },\r\n    { bcg: cyan[300], border: cyan[700] },\r\n    { bcg: teal[300], border: teal[700] },\r\n    { bcg: green[300], border: green[700] },\r\n    { bcg: lime[300], border: lime[700] },\r\n    { bcg: yellow[300], border: yellow[700] },\r\n    { bcg: deepOrange[300], border: deepOrange[700] },\r\n  ];\r\n  const classes = useStyles();\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // useRef\r\n  const ExpenseChartRef = useRef(null);\r\n\r\n  // Selector\r\n  let subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  const consolidateData = (arr) => {\r\n    let tempObj = {};\r\n    let labels = [];\r\n    let data = [];\r\n\r\n    arr.forEach((expense) => {\r\n      if (expense.categories) {\r\n        expense.categories.forEach((category) => {\r\n          if (tempObj[category]) {\r\n            tempObj[category] += expense.amount;\r\n          } else {\r\n            tempObj[category] = expense.amount;\r\n          }\r\n        });\r\n      } else if (tempObj[\"other\"]) {\r\n        tempObj[\"other\"] += expense.amount;\r\n      } else {\r\n        tempObj[\"other\"] = expense.amount;\r\n      }\r\n    });\r\n\r\n    for (const [key, value] of Object.entries(tempObj)) {\r\n      labels.push(key);\r\n      data.push(value);\r\n    }\r\n    return { labels: labels, data: data };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { labels, data } = consolidateData(subExpenses);\r\n\r\n    // select colors\r\n    const nbColors = labels.length;\r\n    const nbColorsInList = colorList.length;\r\n    const savedColors = [];\r\n    const bcgColors = [];\r\n    const borderColors = [];\r\n    let num = 0;\r\n\r\n    for (let i = 0; i < nbColors; i++) {\r\n      do {\r\n        num = Math.round(Math.random() * 100) % nbColorsInList;\r\n      } while (savedColors.includes(num));\r\n\r\n      savedColors.push(num);\r\n      bcgColors.push(colorList[num].bcg);\r\n      borderColors.push(colorList[num].border);\r\n    }\r\n\r\n    setData({\r\n      datasets: [\r\n        {\r\n          data: data,\r\n          backgroundColor: bcgColors,\r\n          borderColor: borderColors,\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n      labels: labels,\r\n    });\r\n\r\n    setOptions({\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n          fontColor: \"white\",\r\n          fontSize: 16,\r\n        },\r\n      },\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [subExpenses]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <h1 className={classes.title}>Categories</h1>\r\n      <div className={classes.canvasContainer}>\r\n        <Doughnut data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js",["182","183","184","185"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Import React Components\r\nimport WalletNewEarnings from \"./WalletNewEarnings\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { PlayCircleFilledWhite } from \"@material-ui/icons\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto [row1] 1fr [row2]\",\r\n    gridTemplateColumns: \"1fr [col1] auto [col2]\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    color: \"white\",\r\n    backgroundColor: teal[400],\r\n    [theme.breakpoints.up(601)]: {\r\n      gridColumn: \"2 / 3\",\r\n      gridRow: \"1 / 2\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"2 / 3\",\r\n    },\r\n  },\r\n  elem1: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"1 / 1\",\r\n  },\r\n  elem2: {\r\n    color: \"white\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 2\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"2 / 2\",\r\n    gridRow: \"1 / span 2\",\r\n    width: 50,\r\n    height: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nfunction WalletTotalEarnings() {\r\n  //useStyles\r\n  const classes = useStyles();\r\n  // useState\r\n  const [total, setTotal] = useState();\r\n\r\n  // useSelector\r\n  const subEarnings = useSelector((state) => state.earnings.subEarnings);\r\n\r\n  // Functions\r\n  const getTotalSubEarnings = () => {\r\n    let result = 0;\r\n    if (!isEmpty(subEarnings)) {\r\n      for (let earning of subEarnings) {\r\n        result += earning.amount;\r\n      }\r\n    }\r\n    return Math.round(result * 100) / 100;\r\n  };\r\n\r\n  //useEffect\r\n\r\n  useEffect(() => {\r\n    setTotal(getTotalSubEarnings());\r\n  }, [subEarnings]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <h5 className={classes.elem1}>Total Earnings </h5>\r\n      <WalletNewEarnings />\r\n      <h2>{!isEmpty(total) && total}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTotalEarnings;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js",["186","187","188","189","190","191","192","193"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport Loader from \"./Loader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./BarChart.module.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport { blue, deepOrange, teal } from \"@material-ui/core/colors\";\r\nimport { relativeTimeRounding } from \"moment\";\r\nimport { ImportantDevices } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr [col1]\",\r\n    gridTemplateRows: \"48px [row1] 1fr [row2]\",\r\n    boxShadow: \"0 0 20px 0 rgba(50, 50, 50, 0.7)\",\r\n    borderRadius: 4,\r\n    padding: 30,\r\n    backgroundColor: blue[200],\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"2 / 3\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"3 / 4\",\r\n    },\r\n  },\r\n  title: {\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"1 / 1\",\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  canvasContainer: {\r\n    position: \"relative\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 3\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    maxHeight: \"400px\",\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      maxHeight: \"312px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction BarChart() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState();\r\n  // const [options, setOptions] = useState();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // useRef\r\n  const ExpenseChartRef = useRef(null);\r\n\r\n  // Selector\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n  const subEarnings = useSelector((state) => state.earnings.subEarnings);\r\n  //Define Options\r\n  const [options, setOptions] = useState({\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            autoSkip: true,\r\n            maxTicksLimit: 10,\r\n            fontColor: \"white\",\r\n          },\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(255,255,255,.3)\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Amount per day\",\r\n            fontColor: \"rgb(255,255,255)\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(255,255,255,.3)\",\r\n          },\r\n          type: \"time\",\r\n          ticks: {\r\n            autoSkip: true,\r\n            maxTicksLimit: 10,\r\n            fontColor: \"white\",\r\n          },\r\n          time: {\r\n            displayFormats: {\r\n              day: \"MMM D\",\r\n            },\r\n            unit: \"day\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Date\",\r\n            fontColor: \"rgb(255,255,255)\",\r\n          },\r\n          distribution: \"linear\",\r\n          bounds: \"ticks\",\r\n        },\r\n      ],\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: \"bottom\",\r\n      labels: {\r\n        fontColor: \"white\",\r\n        fontSize: 16,\r\n      },\r\n    },\r\n  });\r\n\r\n  // Functions\r\n  const consolidateData = (arr) => {\r\n    let consolidated_arr = [];\r\n    let tempObj = {};\r\n\r\n    arr.forEach((obj) => {\r\n      if (tempObj[obj.date]) {\r\n        tempObj[obj.date.toString()] += obj.amount;\r\n      } else {\r\n        tempObj[obj.date.toString()] = obj.amount;\r\n      }\r\n    });\r\n\r\n    for (const [key, value] of Object.entries(tempObj)) {\r\n      // let date = new Date(parseInt(key));\r\n      let date = parseInt(key);\r\n      consolidated_arr.push({ x: date, y: value });\r\n    }\r\n    consolidated_arr = consolidated_arr.sort((a, b) => a.x - b.x);\r\n    return consolidated_arr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let copy_subExpenses = subExpenses.slice();\r\n    copy_subExpenses = copy_subExpenses.sort((a, b) => b.date - a.date);\r\n    const dataExpenses = consolidateData(copy_subExpenses);\r\n\r\n    let copy_subEarnings = subEarnings.slice();\r\n    copy_subEarnings = copy_subEarnings.sort((a, b) => b.date - a.date);\r\n    const dataEarnings = consolidateData(copy_subEarnings);\r\n\r\n    setData({\r\n      datasets: [\r\n        {\r\n          label: \"Earnings\",\r\n          data: dataEarnings,\r\n          backgroundColor: teal[300],\r\n          borderColor: teal[700],\r\n          pointBorderColor: teal[700],\r\n          borderWidth: 1,\r\n        },\r\n        {\r\n          label: \"Expenses\",\r\n          data: dataExpenses,\r\n          backgroundColor: deepOrange[200],\r\n          borderColor: deepOrange[700],\r\n          pointBorderColor: deepOrange[700],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [subExpenses]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <h1 className={classes.title}>Daily Chart</h1>\r\n      <div className={classes.canvasContainer}>\r\n        <Bar data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js",["194","195","196","197","198","199","200","201","202","203","204","205","206"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js",["207","208","209","210","211","212","213"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js",["214"],"import React, { useState } from \"react\";\r\n\r\nimport WalletExpenseGrid from \"./WalletExpenseGrid\";\r\nimport WalletTotalExpenses from \"./WalletTotalExpenses\";\r\nimport WalletTotalEarnings from \"./WalletTotalEarnings\";\r\nimport BarChart from \"./BarChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport Loader from \"./Loader\";\r\n\r\n//Import Styling + Material-UI\r\nimport styles from \"./WalletMainContainer.module.css\";\r\n\r\nfunction WalletMainContainer() {\r\n  // useState variables\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      {/* Big Focus */}\r\n      <WalletTotalExpenses />\r\n      <WalletTotalEarnings />\r\n      {/* Chart Expenses */}\r\n      <BarChart />\r\n      <PieChart />\r\n      {/* Grid Expenses */}\r\n      {isLoading ? <Loader /> : <WalletExpenseGrid />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletMainContainer;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewEarnings.js",["215","216","217","218","219"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\earningsSlice.js",["220"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuUser.js",["221","222","223","224","225","226","227","228"],"import React, { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser } from \"./features/userSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Import for Material UI / Styling\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  teal,\r\n  blue,\r\n  cyan,\r\n  amber,\r\n  grey,\r\n  deepOrange,\r\n  pink,\r\n} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n  gridElement: {\r\n    gridColumnStart: 3,\r\n    \"&:focus\": { outline: \"none\" },\r\n  },\r\n  menuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: 10,\r\n  },\r\n  menuItem: {\r\n    borderBottom: \"1px solid rgba(0,0,0,0.2)\",\r\n    padding: 10,\r\n  },\r\n  userInfo: {\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 0,\r\n  },\r\n  disconnectButton: {\r\n    fontSize: 10,\r\n    \"&:hover\": {\r\n      backgroundColor: pink[50],\r\n      color: pink[500],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n      color: pink[500],\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MenuUser() {\r\n  const colorPalette = [1, 2, 3, 4, 5, 6];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const signOut = (e) => {\r\n    e.preventDefault();\r\n\r\n    const credentials = {\r\n      userId: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n    };\r\n    dispatch(setUser(credentials));\r\n    history.push(\"/Expenses/\");\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <IconButton\r\n        className={classes.gridElement}\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <ColorLensIcon className={classes.appBarIcon} />\r\n      </IconButton> */}\r\n      <IconButton\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        className={classes.gridElement}\r\n        onClick={handleToggle}\r\n      >\r\n        {/* <Badge badgeContent=\"\" color=\"secondary\"> */}\r\n        <AccountCircleIcon className={classes.appBarIcon} />\r\n        {/* </Badge> */}\r\n      </IconButton>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        <Paper>\r\n          <ClickAwayListener onClickAway={handleClose}>\r\n            <MenuList\r\n              className={classes.menuList}\r\n              autoFocusItem={open}\r\n              id=\"menu-list-grow\"\r\n              onKeyDown={handleListKeyDown}\r\n            >\r\n              <p className={`${classes.menuItem} ${classes.userInfo}`}>\r\n                {user.firstname} {user.lastname}\r\n              </p>\r\n              <MenuItem\r\n                className={`${classes.menuItem} ${classes.disconnectButton}`}\r\n                onClick={(e) => signOut(e)}\r\n              >\r\n                <PowerSettingsNewIcon />\r\n                DISCONNECT\r\n              </MenuItem>\r\n            </MenuList>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login2.js",["229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":99,"column":10,"nodeType":"236","messageId":"237","endLine":99,"endColumn":31},{"ruleId":"234","severity":1,"message":"238","line":99,"column":33,"nodeType":"236","messageId":"237","endLine":99,"endColumn":57},{"ruleId":"234","severity":1,"message":"239","line":110,"column":9,"nodeType":"236","messageId":"237","endLine":110,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":136,"column":28,"nodeType":"242","messageId":"243","endLine":136,"endColumn":30},{"ruleId":"234","severity":1,"message":"244","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":21},{"ruleId":"234","severity":1,"message":"245","line":10,"column":22,"nodeType":"236","messageId":"237","endLine":10,"endColumn":35},{"ruleId":"234","severity":1,"message":"246","line":17,"column":10,"nodeType":"236","messageId":"237","endLine":17,"endColumn":19},{"ruleId":"234","severity":1,"message":"247","line":19,"column":10,"nodeType":"236","messageId":"237","endLine":19,"endColumn":20},{"ruleId":"234","severity":1,"message":"248","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":15},{"ruleId":"234","severity":1,"message":"249","line":2,"column":17,"nodeType":"236","messageId":"237","endLine":2,"endColumn":23},{"ruleId":"234","severity":1,"message":"250","line":3,"column":22,"nodeType":"236","messageId":"237","endLine":3,"endColumn":30},{"ruleId":"234","severity":1,"message":"251","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":24},{"ruleId":"234","severity":1,"message":"252","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":25},{"ruleId":"234","severity":1,"message":"253","line":12,"column":8,"nodeType":"236","messageId":"237","endLine":12,"endColumn":15},{"ruleId":"234","severity":1,"message":"254","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":14},{"ruleId":"234","severity":1,"message":"255","line":20,"column":3,"nodeType":"236","messageId":"237","endLine":20,"endColumn":12},{"ruleId":"234","severity":1,"message":"256","line":21,"column":3,"nodeType":"236","messageId":"237","endLine":21,"endColumn":17},{"ruleId":"234","severity":1,"message":"257","line":25,"column":3,"nodeType":"236","messageId":"237","endLine":25,"endColumn":22},{"ruleId":"234","severity":1,"message":"258","line":26,"column":3,"nodeType":"236","messageId":"237","endLine":26,"endColumn":20},{"ruleId":"234","severity":1,"message":"259","line":27,"column":3,"nodeType":"236","messageId":"237","endLine":27,"endColumn":17},{"ruleId":"234","severity":1,"message":"260","line":29,"column":10,"nodeType":"236","messageId":"237","endLine":29,"endColumn":17},{"ruleId":"234","severity":1,"message":"261","line":34,"column":16,"nodeType":"236","messageId":"237","endLine":34,"endColumn":26},{"ruleId":"234","severity":1,"message":"262","line":68,"column":9,"nodeType":"236","messageId":"237","endLine":68,"endColumn":16},{"ruleId":"234","severity":1,"message":"263","line":71,"column":10,"nodeType":"236","messageId":"237","endLine":71,"endColumn":19},{"ruleId":"234","severity":1,"message":"264","line":72,"column":10,"nodeType":"236","messageId":"237","endLine":72,"endColumn":23},{"ruleId":"234","severity":1,"message":"265","line":73,"column":10,"nodeType":"236","messageId":"237","endLine":73,"endColumn":23},{"ruleId":"234","severity":1,"message":"266","line":73,"column":25,"nodeType":"236","messageId":"237","endLine":73,"endColumn":41},{"ruleId":"234","severity":1,"message":"267","line":78,"column":9,"nodeType":"236","messageId":"237","endLine":78,"endColumn":17},{"ruleId":"234","severity":1,"message":"268","line":82,"column":9,"nodeType":"236","messageId":"237","endLine":82,"endColumn":16},{"ruleId":"269","severity":1,"message":"270","line":152,"column":6,"nodeType":"271","endLine":152,"endColumn":14,"suggestions":"272"},{"ruleId":"234","severity":1,"message":"273","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"253","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":15},{"ruleId":"234","severity":1,"message":"274","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"275","line":31,"column":21,"nodeType":"236","messageId":"237","endLine":31,"endColumn":33},{"ruleId":"234","severity":1,"message":"273","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"276","line":3,"column":23,"nodeType":"236","messageId":"237","endLine":3,"endColumn":34},{"ruleId":"234","severity":1,"message":"277","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":24},{"ruleId":"234","severity":1,"message":"274","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"278","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"279","line":5,"column":3,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"280","line":17,"column":10,"nodeType":"236","messageId":"237","endLine":17,"endColumn":27},{"ruleId":"234","severity":1,"message":"281","line":17,"column":29,"nodeType":"236","messageId":"237","endLine":17,"endColumn":43},{"ruleId":"234","severity":1,"message":"282","line":22,"column":3,"nodeType":"236","messageId":"237","endLine":22,"endColumn":7},{"ruleId":"234","severity":1,"message":"283","line":26,"column":3,"nodeType":"236","messageId":"237","endLine":26,"endColumn":13},{"ruleId":"234","severity":1,"message":"284","line":29,"column":8,"nodeType":"236","messageId":"237","endLine":29,"endColumn":18},{"ruleId":"234","severity":1,"message":"285","line":30,"column":8,"nodeType":"236","messageId":"237","endLine":30,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":50,"column":5,"nodeType":"288","messageId":"243","endLine":50,"endColumn":10},{"ruleId":"234","severity":1,"message":"289","line":9,"column":10,"nodeType":"236","messageId":"237","endLine":9,"endColumn":31},{"ruleId":"234","severity":1,"message":"282","line":10,"column":10,"nodeType":"236","messageId":"237","endLine":10,"endColumn":14},{"ruleId":"234","severity":1,"message":"290","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":26},{"ruleId":"269","severity":1,"message":"291","line":66,"column":6,"nodeType":"271","endLine":66,"endColumn":19,"suggestions":"292"},{"ruleId":"234","severity":1,"message":"293","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"294","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":7},{"ruleId":"234","severity":1,"message":"295","line":21,"column":10,"nodeType":"236","messageId":"237","endLine":21,"endColumn":30},{"ruleId":"234","severity":1,"message":"280","line":22,"column":10,"nodeType":"236","messageId":"237","endLine":22,"endColumn":27},{"ruleId":"234","severity":1,"message":"296","line":99,"column":9,"nodeType":"236","messageId":"237","endLine":99,"endColumn":24},{"ruleId":"269","severity":1,"message":"297","line":179,"column":6,"nodeType":"271","endLine":179,"endColumn":19,"suggestions":"298"},{"ruleId":"234","severity":1,"message":"289","line":9,"column":10,"nodeType":"236","messageId":"237","endLine":9,"endColumn":31},{"ruleId":"234","severity":1,"message":"261","line":10,"column":16,"nodeType":"236","messageId":"237","endLine":10,"endColumn":26},{"ruleId":"234","severity":1,"message":"290","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":26},{"ruleId":"269","severity":1,"message":"299","line":76,"column":6,"nodeType":"271","endLine":76,"endColumn":19,"suggestions":"300"},{"ruleId":"234","severity":1,"message":"301","line":3,"column":15,"nodeType":"236","messageId":"237","endLine":3,"endColumn":19},{"ruleId":"234","severity":1,"message":"293","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"302","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":15},{"ruleId":"234","severity":1,"message":"295","line":12,"column":10,"nodeType":"236","messageId":"237","endLine":12,"endColumn":30},{"ruleId":"234","severity":1,"message":"303","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":26},{"ruleId":"234","severity":1,"message":"296","line":62,"column":9,"nodeType":"236","messageId":"237","endLine":62,"endColumn":24},{"ruleId":"234","severity":1,"message":"304","line":68,"column":19,"nodeType":"236","messageId":"237","endLine":68,"endColumn":29},{"ruleId":"269","severity":1,"message":"305","line":182,"column":6,"nodeType":"271","endLine":182,"endColumn":19,"suggestions":"306"},{"ruleId":"234","severity":1,"message":"276","line":3,"column":23,"nodeType":"236","messageId":"237","endLine":3,"endColumn":34},{"ruleId":"234","severity":1,"message":"279","line":5,"column":3,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"254","line":6,"column":3,"nodeType":"236","messageId":"237","endLine":6,"endColumn":14},{"ruleId":"234","severity":1,"message":"255","line":7,"column":3,"nodeType":"236","messageId":"237","endLine":7,"endColumn":12},{"ruleId":"234","severity":1,"message":"256","line":8,"column":3,"nodeType":"236","messageId":"237","endLine":8,"endColumn":17},{"ruleId":"234","severity":1,"message":"307","line":15,"column":8,"nodeType":"236","messageId":"237","endLine":15,"endColumn":17},{"ruleId":"234","severity":1,"message":"308","line":18,"column":8,"nodeType":"236","messageId":"237","endLine":18,"endColumn":18},{"ruleId":"234","severity":1,"message":"309","line":20,"column":8,"nodeType":"236","messageId":"237","endLine":20,"endColumn":25},{"ruleId":"234","severity":1,"message":"310","line":21,"column":8,"nodeType":"236","messageId":"237","endLine":21,"endColumn":16},{"ruleId":"234","severity":1,"message":"311","line":22,"column":8,"nodeType":"236","messageId":"237","endLine":22,"endColumn":16},{"ruleId":"234","severity":1,"message":"248","line":24,"column":8,"nodeType":"236","messageId":"237","endLine":24,"endColumn":13},{"ruleId":"234","severity":1,"message":"312","line":98,"column":9,"nodeType":"236","messageId":"237","endLine":98,"endColumn":23},{"ruleId":"269","severity":1,"message":"313","line":109,"column":6,"nodeType":"271","endLine":109,"endColumn":20,"suggestions":"314"},{"ruleId":"234","severity":1,"message":"249","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":23},{"ruleId":"234","severity":1,"message":"279","line":7,"column":3,"nodeType":"236","messageId":"237","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"315","line":13,"column":3,"nodeType":"236","messageId":"237","endLine":13,"endColumn":14},{"ruleId":"234","severity":1,"message":"316","line":110,"column":9,"nodeType":"236","messageId":"237","endLine":110,"endColumn":25},{"ruleId":"234","severity":1,"message":"312","line":111,"column":9,"nodeType":"236","messageId":"237","endLine":111,"endColumn":23},{"ruleId":"269","severity":1,"message":"317","line":165,"column":6,"nodeType":"271","endLine":165,"endColumn":26,"suggestions":"318"},{"ruleId":"269","severity":1,"message":"319","line":173,"column":6,"nodeType":"271","endLine":173,"endColumn":8,"suggestions":"320"},{"ruleId":"234","severity":1,"message":"275","line":15,"column":21,"nodeType":"236","messageId":"237","endLine":15,"endColumn":33},{"ruleId":"234","severity":1,"message":"279","line":5,"column":3,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"283","line":25,"column":3,"nodeType":"236","messageId":"237","endLine":25,"endColumn":13},{"ruleId":"286","severity":1,"message":"287","line":47,"column":5,"nodeType":"288","messageId":"243","endLine":47,"endColumn":10},{"ruleId":"234","severity":1,"message":"321","line":185,"column":10,"nodeType":"236","messageId":"237","endLine":185,"endColumn":22},{"ruleId":"234","severity":1,"message":"322","line":185,"column":24,"nodeType":"236","messageId":"237","endLine":185,"endColumn":39},{"ruleId":"234","severity":1,"message":"274","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"248","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":13},{"ruleId":"234","severity":1,"message":"278","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":14},{"ruleId":"234","severity":1,"message":"282","line":17,"column":3,"nodeType":"236","messageId":"237","endLine":17,"endColumn":7},{"ruleId":"234","severity":1,"message":"294","line":18,"column":3,"nodeType":"236","messageId":"237","endLine":18,"endColumn":7},{"ruleId":"234","severity":1,"message":"323","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":7},{"ruleId":"234","severity":1,"message":"324","line":20,"column":3,"nodeType":"236","messageId":"237","endLine":20,"endColumn":8},{"ruleId":"234","severity":1,"message":"325","line":21,"column":3,"nodeType":"236","messageId":"237","endLine":21,"endColumn":7},{"ruleId":"234","severity":1,"message":"326","line":71,"column":9,"nodeType":"236","messageId":"237","endLine":71,"endColumn":21},{"ruleId":"234","severity":1,"message":"244","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":21},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'displayDescriptionBar' is assigned a value but never used.","Identifier","unusedVar","'setDisplayDescriptionBar' is assigned a value but never used.","'userId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useMediaQuery' is defined but never used.","'lightBlue' is defined but never used.","'FilterNone' is defined but never used.","'Badge' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'WalletNewExpense' is defined but never used.","'WalletNewEarnings' is defined but never used.","'isEmpty' is defined but never used.","'setDateFrom' is defined but never used.","'setDateTo' is defined but never used.","'setSubExpenses' is defined but never used.","'setDateFromEarnings' is defined but never used.","'setDateToEarnings' is defined but never used.","'setSubEarnings' is defined but never used.","'setUser' is defined but never used.","'deepOrange' is defined but never used.","'classes' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'errorEarnings' is assigned a value but never used.","'errorExpenses' is assigned a value but never used.","'setErrorExpenses' is assigned a value but never used.","'alertAdd' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["329"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'setIsLoading' is assigned a value but never used.","'useDispatch' is defined but never used.","'setWalletTheme' is defined but never used.","'Button' is defined but never used.","'setExpenses' is defined but never used.","'CenterFocusStrong' is defined but never used.","'FullscreenExit' is defined but never used.","'teal' is defined but never used.","'deepPurple' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'PlayCircleFilledWhite' is defined but never used.","'MonetizationOnIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getTotalSubExpenses'. Either include it or remove the dependency array.",["330"],"'styles' is defined but never used.","'blue' is defined but never used.","'relativeTimeRounding' is defined but never used.","'ExpenseChartRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colorList'. Either include it or remove the dependency array.",["331"],"React Hook useEffect has a missing dependency: 'getTotalSubEarnings'. Either include it or remove the dependency array.",["332"],"'Line' is defined but never used.","'classes' is defined but never used.","'ImportantDevices' is defined but never used.","'setOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'subEarnings'. Either include it or remove the dependency array.",["333"],"'MenuTheme' is defined but never used.","'IconButton' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ChatIcon' is defined but never used.","'Snackbar' is defined but never used.","'dateToSelector' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.Width'. Either exclude it or remove the dependency array. Outer scope values like 'window.Width' aren't valid dependencies because mutating them doesn't re-render the component.",["334"],"'setEarnings' is defined but never used.","'dateFromSelector' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshData'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has missing dependencies: 'dispatch', 'from', and 'to'. Either include them or remove the dependency array.",["336"],"'categoryList' is assigned a value but never used.","'setCategoryList' is assigned a value but never used.","'cyan' is defined but never used.","'amber' is defined but never used.","'grey' is defined but never used.","'colorPalette' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},"Update the dependencies array to be: [dispatch, reload, userId]",{"range":"353","text":"354"},"Update the dependencies array to be: [getTotalSubExpenses, subExpenses]",{"range":"355","text":"356"},"Update the dependencies array to be: [colorList, subExpenses]",{"range":"357","text":"358"},"Update the dependencies array to be: [getTotalSubEarnings, subEarnings]",{"range":"359","text":"360"},"Update the dependencies array to be: [subEarnings, subExpenses]",{"range":"361","text":"362"},"Update the dependencies array to be: []",{"range":"363","text":"364"},"Update the dependencies array to be: [expenses, earnings, refreshData]",{"range":"365","text":"366"},"Update the dependencies array to be: [dispatch, from, to]",{"range":"367","text":"368"},[4402,4410],"[dispatch, reload, userId]",[1747,1760],"[getTotalSubExpenses, subExpenses]",[4575,4588],"[colorList, subExpenses]",[1931,1944],"[getTotalSubEarnings, subEarnings]",[4827,4840],"[subEarnings, subExpenses]",[2811,2825],"[]",[4459,4479],"[expenses, earnings, refreshData]",[4720,4722],"[dispatch, from, to]"]