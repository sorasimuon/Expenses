[{"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js":"1","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js":"2","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js":"3","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js":"4","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js":"5","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js":"6","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js":"7","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js":"8","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js":"9","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js":"10","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js":"11","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js":"12","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js":"13","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js":"14","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js":"15","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js":"16","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js":"17","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js":"18","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js":"19","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js":"20","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js":"21","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js":"22","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js":"23","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewEarnings.js":"24","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\earningsSlice.js":"25","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuUser.js":"26","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login2.js":"27","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\index.js":"28","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\serviceWorker.js":"29","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\App.js":"30","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\app\\store.js":"31","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Wallet.js":"32","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Login.js":"33","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Login2.js":"34","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\SignUp.js":"35","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\expensesSlice.js":"36","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\themeSlice.js":"37","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\userSlice.js":"38","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\earningsSlice.js":"39","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNavBar.js":"40","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTimeFilter.js":"41","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletMainContainer.js":"42","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNewEarnings.js":"43","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNewExpense.js":"44","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\apis\\axiosExpenses.js":"45","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\apis\\axiosUsers.js":"46","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\MenuTheme.js":"47","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\MenuUser.js":"48","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletExpenseGrid.js":"49","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTotalEarnings.js":"50","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTotalExpenses.js":"51","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\BarChart.js":"52","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Loader.js":"53","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\PieChart.js":"54"},{"size":623,"mtime":1607968639214,"results":"55","hashOfConfig":"56"},{"size":949,"mtime":1611276216154,"results":"57","hashOfConfig":"56"},{"size":5086,"mtime":499162500000,"results":"58","hashOfConfig":"56"},{"size":9775,"mtime":1610808622884,"results":"59","hashOfConfig":"56"},{"size":8296,"mtime":1610808041096,"results":"60","hashOfConfig":"56"},{"size":4659,"mtime":1610730639245,"results":"61","hashOfConfig":"56"},{"size":2155,"mtime":1611251258473,"results":"62","hashOfConfig":"56"},{"size":194,"mtime":1610794480915,"results":"63","hashOfConfig":"56"},{"size":746,"mtime":1608026156042,"results":"64","hashOfConfig":"56"},{"size":444,"mtime":1610383582773,"results":"65","hashOfConfig":"56"},{"size":1239,"mtime":1611422473470,"results":"66","hashOfConfig":"56"},{"size":573,"mtime":1610724787963,"results":"67","hashOfConfig":"56"},{"size":463,"mtime":1608025202294,"results":"68","hashOfConfig":"56"},{"size":4716,"mtime":1610378124014,"results":"69","hashOfConfig":"56"},{"size":12390,"mtime":1611426728038,"results":"70","hashOfConfig":"56"},{"size":2012,"mtime":1610376960811,"results":"71","hashOfConfig":"56"},{"size":4909,"mtime":1611249863254,"results":"72","hashOfConfig":"56"},{"size":2197,"mtime":1610384934949,"results":"73","hashOfConfig":"56"},{"size":5157,"mtime":1610802201172,"results":"74","hashOfConfig":"56"},{"size":194,"mtime":1610794487029,"results":"75","hashOfConfig":"56"},{"size":4095,"mtime":1611412702478,"results":"76","hashOfConfig":"56"},{"size":5703,"mtime":1611425821543,"results":"77","hashOfConfig":"56"},{"size":881,"mtime":1610119211549,"results":"78","hashOfConfig":"56"},{"size":10250,"mtime":1611426640487,"results":"79","hashOfConfig":"56"},{"size":1303,"mtime":1611422498258,"results":"80","hashOfConfig":"56"},{"size":4727,"mtime":1610808019395,"results":"81","hashOfConfig":"56"},{"size":844,"mtime":1611420856692,"results":"82","hashOfConfig":"56"},{"size":644,"mtime":1611446112735,"results":"83","hashOfConfig":"84"},{"size":5227,"mtime":1611446112736,"results":"85","hashOfConfig":"84"},{"size":990,"mtime":1611759970177,"results":"86","hashOfConfig":"84"},{"size":444,"mtime":1611446112724,"results":"87","hashOfConfig":"84"},{"size":4545,"mtime":1611763097700,"results":"88","hashOfConfig":"84"},{"size":10894,"mtime":1611760548181,"results":"89","hashOfConfig":"84"},{"size":844,"mtime":1611446112713,"results":"90","hashOfConfig":"84"},{"size":8225,"mtime":1611758957461,"results":"91","hashOfConfig":"84"},{"size":1239,"mtime":1611446112725,"results":"92","hashOfConfig":"84"},{"size":463,"mtime":1611446112725,"results":"93","hashOfConfig":"84"},{"size":573,"mtime":1611446112725,"results":"94","hashOfConfig":"84"},{"size":1303,"mtime":1611446112724,"results":"95","hashOfConfig":"84"},{"size":4095,"mtime":1611446112718,"results":"96","hashOfConfig":"84"},{"size":5630,"mtime":1611758992580,"results":"97","hashOfConfig":"84"},{"size":881,"mtime":1611766078595,"results":"98","hashOfConfig":"84"},{"size":10220,"mtime":1611758982687,"results":"99","hashOfConfig":"84"},{"size":12390,"mtime":1611446112720,"results":"100","hashOfConfig":"84"},{"size":194,"mtime":1611763233098,"results":"101","hashOfConfig":"84"},{"size":194,"mtime":1611763239137,"results":"102","hashOfConfig":"84"},{"size":4716,"mtime":1611446112713,"results":"103","hashOfConfig":"84"},{"size":4727,"mtime":1611446112714,"results":"104","hashOfConfig":"84"},{"size":2155,"mtime":1611446112717,"results":"105","hashOfConfig":"84"},{"size":2197,"mtime":1611446112721,"results":"106","hashOfConfig":"84"},{"size":2012,"mtime":1611446112721,"results":"107","hashOfConfig":"84"},{"size":5157,"mtime":1611446112711,"results":"108","hashOfConfig":"84"},{"size":746,"mtime":1611446112711,"results":"109","hashOfConfig":"84"},{"size":4909,"mtime":1611446112714,"results":"110","hashOfConfig":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"636ao0",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"113"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"113"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"113"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"113"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"113"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"113"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"f9x13q",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"180"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"180"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"180"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"180"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"180"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"180"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"180"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"180"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"180"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"180"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"180"},"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\index.js",[],["242","243"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\App.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\serviceWorker.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login.js",["244","245","246","247"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./Login.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser } from \"./features/userSlice\";\r\n\r\n// Import for Styling and Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\nimport walletLogo from \"./img/wallet.png\";\r\nimport messengerLogo from \"./img/messenger.png\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  loginButton: {\r\n    color: \"white\",\r\n    backgroundColor: lightBlue[600],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 4,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: lightBlue[800],\r\n    },\r\n    [theme.breakpoints.down(420)]: {\r\n      height: 32,\r\n    },\r\n  },\r\n  newAccountButton: {\r\n    fontFamily: \"Arial, Helvetica, sans-serif\",\r\n    color: lightBlue[600],\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: lightBlue[800],\r\n      textDecoration: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: lightBlue[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: lightBlue[300],\r\n      borderBottomColor: lightBlue[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction Login() {\r\n  // Declare core functions\r\n  const classes = useStyles();\r\n  const classesTextField = useStylesTextField();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [displayDescriptionBar, setDisplayDescriptionBar] = useState(true);\r\n\r\n  const [password, setPassword] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [toolDescription, setToolDescription] = useState();\r\n  const [toolSelected, setToolSelected] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const [disabledSignIn, setDisableSignIn] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n    setDisableSignIn(true);\r\n\r\n    try {\r\n      if (validInput) {\r\n        const credentials = {\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signin\", credentials);\r\n        if (!response.error) {\r\n          console.log(\"connected\");\r\n          dispatch(setUser(response.data));\r\n          history.push(\"/Expenses/wallet\");\r\n        } else {\r\n          console.log(response.error);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error.toString() == \"Error: Network Error\") {\r\n        setErrorMessages([\"Error connection to server\"]);\r\n      } else {\r\n        setErrorMessages([error.response]);\r\n      }\r\n    } finally {\r\n      setDisableSignIn(false);\r\n    }\r\n  };\r\n\r\n  const handleToolMouseOver = (id) => {\r\n    switch (id) {\r\n      case \"wallet\":\r\n        setToolDescription(\r\n          \"With Happy Wallet, you can record your expenses and have a better control on your money\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      case \"messenger\":\r\n        setToolDescription(\r\n          \"With Happy Messenger, communicate with your friends on a private chat\"\r\n        );\r\n        setToolSelected(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleToolMouseOut = (id) => {\r\n    setToolDescription(\"\");\r\n    setToolSelected(false);\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password)) {\r\n      messages.push(\"Password  is empty\");\r\n    }\r\n\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const updateWidth = () => {\r\n      if (isMounted) {\r\n        setWidth(window.innerWidth);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    console.log(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n\r\n      window.removeEventListener(\"resize\", updateWidth);\r\n      console.log(isMounted);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <div className={styles.carroussel__container} />\r\n      {width >= 960 ? (\r\n        <div className={styles.carroussel__wrapper}>\r\n          <h1 className={styles.title}>\r\n            <span className={styles.capital}>H</span>appy{\" \"}\r\n            <span className={styles.capital}>s</span>uite\r\n          </h1>\r\n          <p className={styles.textDescription}>\r\n            With Happy Suite, create a private space with your friends and your\r\n            family to share personal infomation with the Happy Suite tools\r\n          </p>\r\n\r\n          {/* Series of functionality icons */}\r\n          <div className={styles.toolContainer}>\r\n            <img\r\n              id=\"wallet\"\r\n              className={styles.tool}\r\n              src={walletLogo}\r\n              alt=\"wallet\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n            <img\r\n              id=\"messenger\"\r\n              className={styles.tool}\r\n              src={messengerLogo}\r\n              alt=\"messenger\"\r\n              onMouseOver={(e) => handleToolMouseOver(e.target.id)}\r\n              onMouseOut={(e) => handleToolMouseOut(e.target.id)}\r\n            />\r\n          </div>\r\n          <Slide direction=\"right\" in={toolSelected} mountOnEnter unmountOnExit>\r\n            <p className={styles.functionDescription}>{toolDescription}</p>\r\n          </Slide>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <form className={styles.login__container}>\r\n        <img\r\n          src={HsWhite}\r\n          className={`${styles.logo1} ${classes.space}`}\r\n          alt=\"Hs logo\"\r\n        />\r\n        <h1 className={styles.subject}>LOG IN</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          // value={email || \"\"}\r\n          inputProps={{ value: email || \"\" }}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          // value={password || \"\"}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            value: password || \"\",\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          disabled={disabledSignIn}\r\n          className={`${classes.loginButton} ${classes.space}`}\r\n          onClick={(e) => signIn(e)}\r\n        >\r\n          LOGIN\r\n          {disabledSignIn && <CircularProgress style={{ color: \"white\" }} />}\r\n        </Button>\r\n        <p className={styles.newAccount}>\r\n          Don't have an account?{\" \"}\r\n          <Link className={classes.newAccountButton} to=\"/Expenses/signup\">\r\n            Sign Up\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\SignUp.js",["248","249","250","251"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { setUser } from \"./features/userSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue, teal } from \"@material-ui/core/colors\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  signUpButton: {\r\n    color: \"white\",\r\n    backgroundColor: teal[300],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: teal[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: teal[300],\r\n      borderBottomColor: teal[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction SignUp() {\r\n  // Declare core functions\r\n  let classes = useStyles();\r\n  let classesTextField = useStylesTextField();\r\n\r\n  const [password, setPassword] = useState();\r\n  const [password2, setPassword2] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword2, setShowPassword2] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [firstname, setFirstname] = useState();\r\n  const [lastname, setLastname] = useState();\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signUp = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n\r\n    try {\r\n      if (validInput) {\r\n        const credentials = {\r\n          firstname: firstname,\r\n          lastname: lastname,\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signup\", credentials);\r\n\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n          console.log(response.data);\r\n          dispatch(setUser(response.data));\r\n          history.push(\"/Expenses/wallet\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setErrorMessages([error.response.data]);\r\n    }\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(firstname)) {\r\n      messages.push(\"Firstname is empty\");\r\n    }\r\n    if (isEmpty(lastname)) {\r\n      messages.push(\"Lastname is empty\");\r\n    }\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password) || isEmpty(password2)) {\r\n      messages.push(\"Password and/or Confirm Password is empty\");\r\n    } else if (password !== password2) {\r\n      messages.push(\"Error confirming the password\");\r\n    }\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [errorMessages]);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      {/* <div className={styles.carroussel__container}></div> */}\r\n\r\n      <form className={styles.login__container}>\r\n        <Link to=\"/Expenses/login\">\r\n          <img\r\n            src={HsWhite}\r\n            className={`${styles.logo1} ${classes.space}`}\r\n            alt=\"Hs logo\"\r\n          />\r\n        </Link>\r\n\r\n        {/* <img className={styles.logo2} src={HsLightBlue} alt=\"Hs\" /> */}\r\n        <h1>SIGN UP</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          data-testid=\"inputFirstname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          inputProps={{ value: firstname }}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputLastname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputEmail\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword2\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Confirm Password\"\r\n          type={showPassword2 ? \"text\" : \"password\"}\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword2(!showPassword2)}\r\n                >\r\n                  {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button\r\n          data-testid=\"buttonSignUp\"\r\n          className={`${classes.signUpButton} ${classes.space}`}\r\n          type=\"submit\"\r\n          onClick={(e) => signUp(e)}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Wallet.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import { Badge } from \"@material-ui/core\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\n\r\n// Import React Components\r\nimport WalletNavBar from \"./WalletNavBar\";\r\nimport WalletTimeFilter from \"./WalletTimeFilter\";\r\nimport WalletMainContainer from \"./WalletMainContainer\";\r\nimport WalletNewExpense from \"./WalletNewExpense\";\r\nimport WalletNewEarnings from \"./WalletNewEarnings\";\r\n\r\nimport isEmpty from \"is-empty\";\r\nimport axiosExpenses from \"./apis/axiosExpenses\";\r\n\r\n// Import related to Redux\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n} from \"./features/expensesSlice\";\r\nimport {\r\n  setEarnings,\r\n  setDateFromEarnings,\r\n  setDateToEarnings,\r\n  setSubEarnings,\r\n} from \"./features/earningsSlice\";\r\nimport { setUser } from \"./features/userSlice\";\r\n\r\n// Import Styling + Material-UI\r\nimport styles from \"./Wallet2.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  searchIconWrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  searchBar: {\r\n    display: \"flex\",\r\n    backgroundColor: teal[400],\r\n    borderRadius: 4,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[300],\r\n    },\r\n  },\r\n  rowChart: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n}));\r\n\r\nfunction Wallet() {\r\n  const classes = useStyles();\r\n\r\n  // useState variables\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorEarnings, setErrorEarnings] = useState([]);\r\n  const [errorExpenses, setErrorExpenses] = useState([]);\r\n\r\n  // Redux : dispatch and selectors\r\n  const dispatch = useDispatch();\r\n  const reload = useSelector((state) => state.expenses.reload);\r\n  const alertAdd = useSelector((state) => state.expenses.alertAdd);\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // other Hooks\r\n  const history = useHistory();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    // Fetch earnings from DB\r\n    (async () => {\r\n      try {\r\n        const URL = `/earnings?userId=${userId}`;\r\n        setIsLoading(true);\r\n        const response = await axiosExpenses.get(URL);\r\n        setIsLoading(false);\r\n\r\n        const content = [];\r\n        for (let earning of response.data) {\r\n          let temp = {};\r\n          temp.id = earning._id;\r\n          temp.userId = earning.userId;\r\n          temp.date = parseInt(earning.date);\r\n          temp.name = earning.name;\r\n          temp.source_type = earning.source_type;\r\n          temp.type = earning.type;\r\n          temp.amount = parseFloat(earning.amount);\r\n          temp.currency = earning.currency;\r\n          delete earning._id;\r\n          content.push(temp);\r\n        }\r\n        dispatch(setEarnings(content));\r\n      } catch (error) {\r\n        switch (error.response.status) {\r\n          case 400:\r\n            console.log(\"Result not found for this user\");\r\n            setErrorEarnings(\"No data \");\r\n\r\n            break;\r\n          default:\r\n            console.log(\r\n              \"Oops, Somthing wrong happened during request Earnings\"\r\n            );\r\n            setErrorEarnings(\"Error on request\");\r\n        }\r\n      }\r\n    })();\r\n\r\n    // Fetch expenses from DB\r\n    (async () => {\r\n      try {\r\n        const URL = `/expenses?userId=${userId}`;\r\n        setIsLoading(true);\r\n\r\n        const response = await axiosExpenses.get(URL);\r\n        setIsLoading(false);\r\n\r\n        const content = [];\r\n        for (let expense of response.data) {\r\n          let temp = {};\r\n          temp.id = expense._id;\r\n          temp.userId = expense.userId;\r\n          temp.date = parseInt(expense.date);\r\n          temp.name = expense.name;\r\n          temp.categories = expense.categories;\r\n          temp.source_type = expense.source_type;\r\n          temp.type = expense.type;\r\n          temp.amount = parseFloat(expense.amount);\r\n          temp.currency = expense.currency;\r\n          delete expense._id;\r\n          content.push(temp);\r\n        }\r\n        dispatch(setExpenses(content));\r\n      } catch (error) {}\r\n    })();\r\n  }, [reload]);\r\n\r\n  return (\r\n    <div className={styles.wallet}>\r\n      <WalletNavBar />\r\n      <div className={styles.filterContainer}>\r\n        <WalletTimeFilter />\r\n      </div>\r\n      <WalletMainContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wallet;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletExpenseGrid.js",["274","275","276","277"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport isEmpty from \"is-empty\";\r\nimport Loader from \"./Loader\";\r\nimport moment from \"moment\";\r\n\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    overflow: \"auto\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    gridColumn: \"1 / 3\",\r\n    gridRow: \"3 / 4\",\r\n    minHeight: 240,\r\n    height: \"auto\",\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"4 / 5\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"5 / 6\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction WalletExpenseGrid() {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // selectors Redux\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  // rows\r\n  const rows = [];\r\n  for (let expense of subExpenses) {\r\n    const temp = {};\r\n    temp.id = expense.id;\r\n    temp.userId = expense.userId;\r\n    let date = new Date(expense.date);\r\n    temp.date = date;\r\n    temp.name = expense.name;\r\n    temp.amount = expense.amount;\r\n    temp.categories = expense.categories;\r\n    temp.currency = expense.currency;\r\n    temp.type = expense.type;\r\n    temp.source_type = expense.source_type;\r\n    rows.push(temp);\r\n  }\r\n\r\n  // columns\r\n  const columns = [\r\n    { field: \"name\", headerName: \"NAME\", width: 300 },\r\n    { field: \"date\", headerName: \"DATE\", width: 300 },\r\n    { field: \"categories\", headerName: \"CATEGORIES\", width: 300 },\r\n    { field: \"amount\", headerName: \"AMOUNT\", width: 300 },\r\n    { field: \"currency\", headerName: \"CURRENCY\", width: 300 },\r\n    { field: \"type\", headerName: \"TYPE\", width: 300 },\r\n    { field: \"source_type\", headerName: \"SOURCE TYPE\", width: 300 },\r\n  ];\r\n\r\n  if (isLoading) return <Loader />;\r\n\r\n  // Fulfill column names\r\n\r\n  return (\r\n    <div className={classes.grid}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={10} checkboxSelection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletExpenseGrid;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosExpenses.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Loader.js",["278","279","280"],"import React, { useEffect } from \"react\";\r\nimport styles from \"./WalletExpenseGrid.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setWalletTheme } from \"./features/themeSlice\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nfunction Loader() {\r\n  const themeWallet = useSelector((state) => state.theme).wallet;\r\n\r\n  const useStyles = makeStyles(() => ({\r\n    progress: {\r\n      margin: \"auto\",\r\n      color: themeWallet,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={styles.walletExpenseGrid}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\app\\store.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\expensesSlice.js",["281"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\userSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\themeSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuTheme.js",["282"],"import React, { useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  teal,\r\n  blue,\r\n  cyan,\r\n  amber,\r\n  grey,\r\n  deepOrange,\r\n} from \"@material-ui/core/colors\";\r\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n  gridElement: {\r\n    gridColumnStart: 1,\r\n    \"&:focus\": { outline: \"none\" },\r\n  },\r\n  color1: {\r\n    backgroundColor: teal[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: teal[500],\r\n    },\r\n  },\r\n  color2: {\r\n    backgroundColor: blue[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: blue[500],\r\n    },\r\n  },\r\n  color3: {\r\n    backgroundColor: cyan[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: cyan[500],\r\n    },\r\n  },\r\n  color4: {\r\n    backgroundColor: amber[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: amber[500],\r\n    },\r\n  },\r\n  color5: {\r\n    backgroundColor: grey[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: grey[500],\r\n    },\r\n  },\r\n  color6: {\r\n    backgroundColor: deepOrange[600],\r\n    margin: 2,\r\n    height: 40,\r\n    width: 40,\r\n    \"&:hover\": {\r\n      // border: \"2px solid lightgrey\",\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n  },\r\n  menuList: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    width: 152,\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nexport default function MenuTheme() {\r\n  const colorPalette = [1, 2, 3, 4, 5, 6];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        className={classes.gridElement}\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <ColorLensIcon className={classes.appBarIcon} />\r\n      </IconButton>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  className={classes.menuList}\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                >\r\n                  {colorPalette.map((colorNum) => (\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes[\"color\" + colorNum]}\r\n                    />\r\n                  ))}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewExpense.js",["283","284","285","286","287","288","289","290"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalExpenses.js",["291","292","293","294"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import React Components\r\nimport WalletNewExpense from \"./WalletNewExpense\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { PlayCircleFilledWhite } from \"@material-ui/icons\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto [row1] 1fr [row2]\",\r\n    gridTemplateColumns: \"1fr [col1] auto [col2]\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    backgroundColor: deepOrange[400],\r\n    color: \"white\",\r\n    [theme.breakpoints.down(601)]: {\r\n      gridColumn: \"1 / 2\",\r\n      gridRow: \"1 / 2\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"1 / 1\",\r\n    },\r\n  },\r\n  elem1: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"1 / 1\",\r\n  },\r\n  elem2: {\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 2\",\r\n  },\r\n}));\r\n\r\nfunction WalletTotalExpenses() {\r\n  //useStyles\r\n  const classes = useStyles();\r\n  // useState\r\n  const [total, setTotal] = useState();\r\n\r\n  // useSelector\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  // Functions\r\n  const getTotalSubExpenses = () => {\r\n    let result = 0;\r\n    if (!isEmpty(subExpenses)) {\r\n      for (let expense of subExpenses) {\r\n        result += expense.amount;\r\n      }\r\n    }\r\n    return Math.round(result * 100) / 100;\r\n  };\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    setTotal(getTotalSubExpenses());\r\n  }, [subExpenses]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <h5 className={classes.elem1}>Total Expenses </h5>\r\n      <WalletNewExpense />\r\n      <h2>{!isEmpty(total) && total}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTotalExpenses;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\PieChart.js",["295","296","297","298","299","300"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport Loader from \"./Loader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./PieChart.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n  red,\r\n  deepPurple,\r\n  indigo,\r\n  cyan,\r\n  teal,\r\n  green,\r\n  lime,\r\n  yellow,\r\n  deepOrange,\r\n  blue,\r\n} from \"@material-ui/core/colors\";\r\nimport { relativeTimeRounding } from \"moment\";\r\nimport { CenterFocusStrong } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // box: {\r\n  //   position: \"relative\",\r\n  //   display: \"flex\",\r\n  //   flexDirection: \"column\",\r\n  //   justifyContent: \"flex-start\",\r\n  //   alignItems: \"flex-start\",\r\n  //   boxShadow: \"0 0 20px 0 rgba(50, 50, 50, 0.7)\",\r\n  //   borderRadius: 4,\r\n  //   padding: 30,\r\n  //   backgroundColor: indigo[300],\r\n  //   alignSelf: \"stretch !important\",\r\n  // },\r\n  // title: {\r\n  //   color: \"white\",\r\n  //   marginBottom: 20,\r\n  // },\r\n  // canvasContainer: {\r\n  //   position: \"relative\",\r\n  //   width: \"80% !important\",\r\n  //   height: \"80% !important\",\r\n  //   margin: \"auto\",\r\n  // },\r\n\r\n  box: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr [col1]\",\r\n    gridTemplateRows: \"48px [row1] 1fr [row2]\",\r\n    boxShadow: \"0 0 20px 0 rgba(100, 100, 100, 0.7)\",\r\n    borderRadius: 4,\r\n    padding: 30,\r\n    backgroundColor: deepPurple[200],\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"3 / 4\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"4 / 5\",\r\n    },\r\n  },\r\n  title: {\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"1 / 1\",\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  canvasContainer: {\r\n    position: \"relative\",\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"2 / 2\",\r\n    width: \"100% !important\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nfunction PieChart() {\r\n  // List of colors\r\n  const colorList = [\r\n    { bcg: red[300], border: red[700] },\r\n    { bcg: deepPurple[300], border: deepPurple[700] },\r\n    { bcg: indigo[300], border: indigo[700] },\r\n    { bcg: cyan[300], border: cyan[700] },\r\n    { bcg: teal[300], border: teal[700] },\r\n    { bcg: green[300], border: green[700] },\r\n    { bcg: lime[300], border: lime[700] },\r\n    { bcg: yellow[300], border: yellow[700] },\r\n    { bcg: deepOrange[300], border: deepOrange[700] },\r\n  ];\r\n  const classes = useStyles();\r\n  const [data, setData] = useState();\r\n  const [options, setOptions] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // useRef\r\n  const ExpenseChartRef = useRef(null);\r\n\r\n  // Selector\r\n  let subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n\r\n  const consolidateData = (arr) => {\r\n    let tempObj = {};\r\n    let labels = [];\r\n    let data = [];\r\n\r\n    arr.forEach((expense) => {\r\n      if (expense.categories) {\r\n        expense.categories.forEach((category) => {\r\n          if (tempObj[category]) {\r\n            tempObj[category] += expense.amount;\r\n          } else {\r\n            tempObj[category] = expense.amount;\r\n          }\r\n        });\r\n      } else if (tempObj[\"other\"]) {\r\n        tempObj[\"other\"] += expense.amount;\r\n      } else {\r\n        tempObj[\"other\"] = expense.amount;\r\n      }\r\n    });\r\n\r\n    for (const [key, value] of Object.entries(tempObj)) {\r\n      labels.push(key);\r\n      data.push(value);\r\n    }\r\n    return { labels: labels, data: data };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { labels, data } = consolidateData(subExpenses);\r\n\r\n    // select colors\r\n    const nbColors = labels.length;\r\n    const nbColorsInList = colorList.length;\r\n    const savedColors = [];\r\n    const bcgColors = [];\r\n    const borderColors = [];\r\n    let num = 0;\r\n\r\n    for (let i = 0; i < nbColors; i++) {\r\n      do {\r\n        num = Math.round(Math.random() * 100) % nbColorsInList;\r\n      } while (savedColors.includes(num));\r\n\r\n      savedColors.push(num);\r\n      bcgColors.push(colorList[num].bcg);\r\n      borderColors.push(colorList[num].border);\r\n    }\r\n\r\n    setData({\r\n      datasets: [\r\n        {\r\n          data: data,\r\n          backgroundColor: bcgColors,\r\n          borderColor: borderColors,\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n      labels: labels,\r\n    });\r\n\r\n    setOptions({\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n          fontColor: \"white\",\r\n          fontSize: 16,\r\n        },\r\n      },\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [subExpenses]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <h1 className={classes.title}>Categories</h1>\r\n      <div className={classes.canvasContainer}>\r\n        <Doughnut data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PieChart;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTotalEarnings.js",["301","302","303","304"],"import React, { useState, useEffect } from \"react\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// Import React Components\r\nimport WalletNewEarnings from \"./WalletNewEarnings\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { PlayCircleFilledWhite } from \"@material-ui/icons\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto [row1] 1fr [row2]\",\r\n    gridTemplateColumns: \"1fr [col1] auto [col2]\",\r\n    boxShadow: \"0 0 10px 0 rgba(75, 75, 75, 0.5)\",\r\n    borderRadius: 4,\r\n    padding: 10,\r\n    color: \"white\",\r\n    backgroundColor: teal[400],\r\n    [theme.breakpoints.up(601)]: {\r\n      gridColumn: \"2 / 3\",\r\n      gridRow: \"1 / 2\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"2 / 3\",\r\n    },\r\n  },\r\n  elem1: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"1 / 1\",\r\n  },\r\n  elem2: {\r\n    color: \"white\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 2\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255,255,255,0.5)\",\r\n    gridColumn: \"2 / 2\",\r\n    gridRow: \"1 / span 2\",\r\n    width: 50,\r\n    height: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nfunction WalletTotalEarnings() {\r\n  //useStyles\r\n  const classes = useStyles();\r\n  // useState\r\n  const [total, setTotal] = useState();\r\n\r\n  // useSelector\r\n  const subEarnings = useSelector((state) => state.earnings.subEarnings);\r\n\r\n  // Functions\r\n  const getTotalSubEarnings = () => {\r\n    let result = 0;\r\n    if (!isEmpty(subEarnings)) {\r\n      for (let earning of subEarnings) {\r\n        result += earning.amount;\r\n      }\r\n    }\r\n    return Math.round(result * 100) / 100;\r\n  };\r\n\r\n  //useEffect\r\n\r\n  useEffect(() => {\r\n    setTotal(getTotalSubEarnings());\r\n  }, [subEarnings]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <h5 className={classes.elem1}>Total Earnings </h5>\r\n      <WalletNewEarnings />\r\n      <h2>{!isEmpty(total) && total}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTotalEarnings;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\BarChart.js",["305","306","307","308","309","310","311","312"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport Loader from \"./Loader\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./BarChart.module.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport classes from \"./BarChart.module.css\";\r\nimport { blue, deepOrange, teal } from \"@material-ui/core/colors\";\r\nimport { relativeTimeRounding } from \"moment\";\r\nimport { ImportantDevices } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr [col1]\",\r\n    gridTemplateRows: \"48px [row1] 1fr [row2]\",\r\n    boxShadow: \"0 0 20px 0 rgba(50, 50, 50, 0.7)\",\r\n    borderRadius: 4,\r\n    padding: 30,\r\n    backgroundColor: blue[200],\r\n    [theme.breakpoints.between(601, 800)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"2 / 3\",\r\n    },\r\n    [theme.breakpoints.down(600)]: {\r\n      gridColumn: \"1 / 3\",\r\n      gridRow: \"3 / 4\",\r\n    },\r\n  },\r\n  title: {\r\n    gridColumn: \"1 / 1\",\r\n    gridrow: \"1 / 1\",\r\n    color: \"white\",\r\n    marginBottom: 20,\r\n  },\r\n  canvasContainer: {\r\n    position: \"relative\",\r\n    gridColumn: \"1 / 1\",\r\n    gridRow: \"2 / 3\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    maxHeight: \"400px\",\r\n    [theme.breakpoints.down(800)]: {\r\n      width: \"100%\",\r\n      height: \"auto\",\r\n      maxHeight: \"312px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction BarChart() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState();\r\n  // const [options, setOptions] = useState();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // useRef\r\n  const ExpenseChartRef = useRef(null);\r\n\r\n  // Selector\r\n  const subExpenses = useSelector((state) => state.expenses.subExpenses);\r\n  const subEarnings = useSelector((state) => state.earnings.subEarnings);\r\n  //Define Options\r\n  const [options, setOptions] = useState({\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            autoSkip: true,\r\n            maxTicksLimit: 10,\r\n            fontColor: \"white\",\r\n          },\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(255,255,255,.3)\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Amount per day\",\r\n            fontColor: \"rgb(255,255,255)\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: true,\r\n            color: \"rgba(255,255,255,.3)\",\r\n          },\r\n          type: \"time\",\r\n          ticks: {\r\n            autoSkip: true,\r\n            maxTicksLimit: 10,\r\n            fontColor: \"white\",\r\n          },\r\n          time: {\r\n            displayFormats: {\r\n              day: \"MMM D\",\r\n            },\r\n            unit: \"day\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: \"Date\",\r\n            fontColor: \"rgb(255,255,255)\",\r\n          },\r\n          distribution: \"linear\",\r\n          bounds: \"ticks\",\r\n        },\r\n      ],\r\n    },\r\n    legend: {\r\n      display: true,\r\n      position: \"bottom\",\r\n      labels: {\r\n        fontColor: \"white\",\r\n        fontSize: 16,\r\n      },\r\n    },\r\n  });\r\n\r\n  // Functions\r\n  const consolidateData = (arr) => {\r\n    let consolidated_arr = [];\r\n    let tempObj = {};\r\n\r\n    arr.forEach((obj) => {\r\n      if (tempObj[obj.date]) {\r\n        tempObj[obj.date.toString()] += obj.amount;\r\n      } else {\r\n        tempObj[obj.date.toString()] = obj.amount;\r\n      }\r\n    });\r\n\r\n    for (const [key, value] of Object.entries(tempObj)) {\r\n      // let date = new Date(parseInt(key));\r\n      let date = parseInt(key);\r\n      consolidated_arr.push({ x: date, y: value });\r\n    }\r\n    consolidated_arr = consolidated_arr.sort((a, b) => a.x - b.x);\r\n    return consolidated_arr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let copy_subExpenses = subExpenses.slice();\r\n    copy_subExpenses = copy_subExpenses.sort((a, b) => b.date - a.date);\r\n    const dataExpenses = consolidateData(copy_subExpenses);\r\n\r\n    let copy_subEarnings = subEarnings.slice();\r\n    copy_subEarnings = copy_subEarnings.sort((a, b) => b.date - a.date);\r\n    const dataEarnings = consolidateData(copy_subEarnings);\r\n\r\n    setData({\r\n      datasets: [\r\n        {\r\n          label: \"Earnings\",\r\n          data: dataEarnings,\r\n          backgroundColor: teal[300],\r\n          borderColor: teal[700],\r\n          pointBorderColor: teal[700],\r\n          borderWidth: 1,\r\n        },\r\n        {\r\n          label: \"Expenses\",\r\n          data: dataExpenses,\r\n          backgroundColor: deepOrange[200],\r\n          borderColor: deepOrange[700],\r\n          pointBorderColor: deepOrange[700],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    });\r\n\r\n    setIsLoading(false);\r\n  }, [subExpenses]);\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.box}>\r\n      <h1 className={classes.title}>Daily Chart</h1>\r\n      <div className={classes.canvasContainer}>\r\n        <Bar data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\apis\\axiosUsers.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNavBar.js",["313","314","315","316","317","318","319","320","321","322","323","324","325"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletTimeFilter.js",["326","327","328","329","330","331","332"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletMainContainer.js",["333"],"import React, { useState } from \"react\";\r\n\r\nimport WalletExpenseGrid from \"./WalletExpenseGrid\";\r\nimport WalletTotalExpenses from \"./WalletTotalExpenses\";\r\nimport WalletTotalEarnings from \"./WalletTotalEarnings\";\r\nimport BarChart from \"./BarChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport Loader from \"./Loader\";\r\n\r\n//Import Styling + Material-UI\r\nimport styles from \"./WalletMainContainer.module.css\";\r\n\r\nfunction WalletMainContainer() {\r\n  // useState variables\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      {/* Big Focus */}\r\n      <WalletTotalExpenses />\r\n      <WalletTotalEarnings />\r\n      {/* Chart Expenses */}\r\n      <BarChart />\r\n      <PieChart />\r\n      {/* Grid Expenses */}\r\n      {isLoading ? <Loader /> : <WalletExpenseGrid />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletMainContainer;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\WalletNewEarnings.js",["334","335","336","337","338"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\features\\earningsSlice.js",["339"],"D:\\Projects\\Javascript\\Expenses\\expenses\\src\\MenuUser.js",["340","341","342","343","344","345","346","347"],"import React, { useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser } from \"./features/userSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Import for Material UI / Styling\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  teal,\r\n  blue,\r\n  cyan,\r\n  amber,\r\n  grey,\r\n  deepOrange,\r\n  pink,\r\n} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n  gridElement: {\r\n    gridColumnStart: 3,\r\n    \"&:focus\": { outline: \"none\" },\r\n  },\r\n  menuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: 10,\r\n  },\r\n  menuItem: {\r\n    borderBottom: \"1px solid rgba(0,0,0,0.2)\",\r\n    padding: 10,\r\n  },\r\n  userInfo: {\r\n    textAlign: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: 0,\r\n  },\r\n  disconnectButton: {\r\n    fontSize: 10,\r\n    \"&:hover\": {\r\n      backgroundColor: pink[50],\r\n      color: pink[500],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n      color: pink[500],\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MenuUser() {\r\n  const colorPalette = [1, 2, 3, 4, 5, 6];\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const signOut = (e) => {\r\n    e.preventDefault();\r\n\r\n    const credentials = {\r\n      userId: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n    };\r\n    dispatch(setUser(credentials));\r\n    history.push(\"/Expenses/\");\r\n  };\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <IconButton\r\n        className={classes.gridElement}\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n      >\r\n        <ColorLensIcon className={classes.appBarIcon} />\r\n      </IconButton> */}\r\n      <IconButton\r\n        size=\"small\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        className={classes.gridElement}\r\n        onClick={handleToggle}\r\n      >\r\n        {/* <Badge badgeContent=\"\" color=\"secondary\"> */}\r\n        <AccountCircleIcon className={classes.appBarIcon} />\r\n        {/* </Badge> */}\r\n      </IconButton>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        <Paper>\r\n          <ClickAwayListener onClickAway={handleClose}>\r\n            <MenuList\r\n              className={classes.menuList}\r\n              autoFocusItem={open}\r\n              id=\"menu-list-grow\"\r\n              onKeyDown={handleListKeyDown}\r\n            >\r\n              <p className={`${classes.menuItem} ${classes.userInfo}`}>\r\n                {user.firstname} {user.lastname}\r\n              </p>\r\n              <MenuItem\r\n                className={`${classes.menuItem} ${classes.disconnectButton}`}\r\n                onClick={(e) => signOut(e)}\r\n              >\r\n                <PowerSettingsNewIcon />\r\n                DISCONNECT\r\n              </MenuItem>\r\n            </MenuList>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Projects\\Javascript\\Expenses\\expenses\\src\\Login2.js",["348"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\index.js",[],["349","350"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\serviceWorker.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\App.js",["351"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport Wallet from \"./Wallet\";\r\nimport Login2 from \"./Login2\";\r\n\r\nfunction App() {\r\n  const userId = useSelector((state) => state.user.userId);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/Expenses/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/Expenses/signup\">\r\n          <SignUp />\r\n        </Route>\r\n        {!isEmpty(userId) ? (\r\n          <Route path=\"/Expenses/wallet\" component={Wallet} />\r\n        ) : (\r\n          <Redirect to=\"/Expenses/login\" />\r\n        )}\r\n        <Route path=\"/Expenses/\">\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\app\\store.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Wallet.js",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Login.js",["374","375","376","377","378"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Login2.js",["379"],"import React from \"react\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUser } from \"./features/userSlice\";\r\n\r\nfunction Login2() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const credentials = {\r\n      email: \"test@email.com\",\r\n      password: \"doudoushi\",\r\n    };\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: \"/signin\",\r\n      data: credentials,\r\n    });\r\n    if (!response.error) {\r\n      dispatch(setUser(response.data));\r\n      history.push(\"/Expenses/wallet\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <button onClick={(e) => signIn(e)}> Connect</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login2;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\SignUp.js",["380","381","382","383"],"// import core functions\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./SignUp.module.css\";\r\nimport isEmpty from \"is-empty\";\r\nimport axios from \"./apis/axiosUsers\";\r\nimport { setUser } from \"./features/userSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { lightBlue, teal } from \"@material-ui/core/colors\";\r\nimport HsWhite from \"./img/Hs-White.png\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\n// Declre styles to override default component styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  large: {\r\n    width: \"100%\",\r\n  },\r\n  space: {\r\n    marginBottom: 20,\r\n  },\r\n  signUpButton: {\r\n    color: \"white\",\r\n    backgroundColor: teal[300],\r\n    width: \"100%\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 30,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n\r\n  iconButton: {\r\n    width: 80,\r\n    height: 80,\r\n    border: \"3px solid #039be5\",\r\n    backgroundColor: \"white,\",\r\n  },\r\n  textField: {\r\n    [theme.breakpoints.down(380)]: {\r\n      height: 28,\r\n    },\r\n  },\r\n  errorIcon: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst useStylesTextField = makeStyles((theme) => ({\r\n  root: {\r\n    color: teal[300],\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 10,\r\n    },\r\n    \"&$focused\": {\r\n      color: teal[300],\r\n      borderBottomColor: teal[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction SignUp() {\r\n  // Declare core functions\r\n  let classes = useStyles();\r\n  let classesTextField = useStylesTextField();\r\n\r\n  const [password, setPassword] = useState();\r\n  const [password2, setPassword2] = useState();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword2, setShowPassword2] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [firstname, setFirstname] = useState();\r\n  const [lastname, setLastname] = useState();\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  const signUp = async (e) => {\r\n    e.preventDefault();\r\n    const validInput = checkValidityInput();\r\n\r\n    try {\r\n      if (validInput) {\r\n        const credentials = {\r\n          firstname: firstname,\r\n          lastname: lastname,\r\n          email: email,\r\n          password: password,\r\n        };\r\n\r\n        const response = await axios.post(\"/signup\", credentials);\r\n\r\n        if (response.status === 201) {\r\n          dispatch(setUser(response.data));\r\n          history.push(\"/Expenses/wallet\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setErrorMessages([error.response.data]);\r\n    }\r\n  };\r\n\r\n  const checkValidityInput = () => {\r\n    const messages = [];\r\n\r\n    if (isEmpty(firstname)) {\r\n      messages.push(\"Firstname is empty\");\r\n    }\r\n    if (isEmpty(lastname)) {\r\n      messages.push(\"Lastname is empty\");\r\n    }\r\n    if (isEmpty(email)) {\r\n      messages.push(\"Email is empty\");\r\n    } else if (!email.match(mailFormat)) {\r\n      messages.push(\"Email wrong format\");\r\n    }\r\n    if (isEmpty(password) || isEmpty(password2)) {\r\n      messages.push(\"Password and/or Confirm Password is empty\");\r\n    } else if (password !== password2) {\r\n      messages.push(\"Error confirming the password\");\r\n    }\r\n    setErrorMessages(messages);\r\n\r\n    if (isEmpty(messages)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [errorMessages]);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      {/* <div className={styles.carroussel__container}></div> */}\r\n\r\n      <form className={styles.login__container}>\r\n        <Link to=\"/Expenses/login\">\r\n          <img\r\n            src={HsWhite}\r\n            className={`${styles.logo1} ${classes.space}`}\r\n            alt=\"Hs logo\"\r\n          />\r\n        </Link>\r\n\r\n        {/* <img className={styles.logo2} src={HsLightBlue} alt=\"Hs\" /> */}\r\n        <h1>SIGN UP</h1>\r\n\r\n        {/* Error messages display */}\r\n        <div className={styles.errorMessagesContainer}>\r\n          {!isEmpty(errorMessages) && (\r\n            <p className={styles.errorMesssages}>\r\n              <ErrorIcon className={classes.errorIcon} /> Error\r\n            </p>\r\n          )}\r\n          {!isEmpty(errorMessages) &&\r\n            errorMessages.map((message, id) => (\r\n              <p key={id} className={styles.errorMessages}>\r\n                {message}\r\n              </p>\r\n            ))}\r\n        </div>\r\n\r\n        <TextField\r\n          data-testid=\"inputFirstname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          inputProps={{ value: firstname }}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputLastname\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputEmail\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          data-testid=\"inputPassword2\"\r\n          fullWidth\r\n          className={`${classes.textField} ${classes.space}`}\r\n          InputLabelProps={{\r\n            classes: classesTextField,\r\n          }}\r\n          label=\"Confirm Password\"\r\n          type={showPassword2 ? \"text\" : \"password\"}\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={(e) => setShowPassword2(!showPassword2)}\r\n                >\r\n                  {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Button\r\n          data-testid=\"buttonSignUp\"\r\n          className={`${classes.signUpButton} ${classes.space}`}\r\n          type=\"submit\"\r\n          onClick={(e) => signUp(e)}\r\n        >\r\n          SIGN UP\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\expensesSlice.js",["384"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  expenses: [],\r\n  subExpenses: [],\r\n  dateFrom: \"\",\r\n  dateTo: \"\",\r\n  reload: false,\r\n  alertAdd: \"\",\r\n};\r\n\r\nconst expensesSlice = createSlice({\r\n  name: \"expenses\",\r\n  initialState,\r\n  reducers: {\r\n    setExpenses(state, action) {\r\n      return {\r\n        ...state,\r\n        expenses: action.payload,\r\n      };\r\n    },\r\n    setDateFrom(state, action) {\r\n      return {\r\n        ...state,\r\n        dateFrom: action.payload,\r\n      };\r\n    },\r\n    setDateTo(state, action) {\r\n      return {\r\n        ...state,\r\n        dateTo: action.payload,\r\n      };\r\n    },\r\n    setSubExpenses(state, action) {\r\n      return {\r\n        ...state,\r\n        subExpenses: action.payload,\r\n      };\r\n    },\r\n    switchReload(state, action) {\r\n      return {\r\n        ...state,\r\n        reload: !state.reload,\r\n      };\r\n    },\r\n    changeAlertAdd(state, action) {\r\n      return {\r\n        ...state,\r\n        alertAdd: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n  switchReload,\r\n  changeAlertAdd,\r\n} = expensesSlice.actions;\r\n\r\nexport default expensesSlice.reducer;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\themeSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\userSlice.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\features\\earningsSlice.js",["385"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nconst initialState = {\r\n  earnings: [],\r\n  subEarnings: [],\r\n  dateFrom: \"\",\r\n  dateTo: \"\",\r\n  reload: false,\r\n  alertAdd: \"\",\r\n};\r\n\r\nconst earningsSlice = createSlice({\r\n  name: \"earnings\",\r\n  initialState,\r\n  reducers: {\r\n    setEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        earnings: action.payload,\r\n      };\r\n    },\r\n    setDateFromEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        dateFrom: action.payload,\r\n      };\r\n    },\r\n    setDateToEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        dateTo: action.payload,\r\n      };\r\n    },\r\n    setSubEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        subEarnings: action.payload,\r\n      };\r\n    },\r\n    switchReloadEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        reload: !state.reload,\r\n      };\r\n    },\r\n    changeAlertAddEarnings(state, action) {\r\n      return {\r\n        ...state,\r\n        alertAdd: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setEarnings,\r\n  setDateFromEarnings,\r\n  setDateToEarnings,\r\n  setSubEarnings,\r\n  switchReloadEarnings,\r\n  changeAlertAddEarnings,\r\n} = earningsSlice.actions;\r\n\r\nexport default earningsSlice.reducer;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNavBar.js",["386","387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n} from \"./features/expensesSlice\";\r\n\r\n// Import Design elements + Material-UI\r\nimport styles from \"./WalletNavBar.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal, deepOrange } from \"@material-ui/core/colors\";\r\nimport MenuTheme from \"./MenuTheme\";\r\nimport MenuUser from \"./MenuUser\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport walletLogo from \"./img/wallet.png\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\n// Define Styles Material-UI\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    gridColumnStart: 1,\r\n    gridRowStart: 1,\r\n    backgroundColor: teal[600],\r\n  },\r\n  toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  rowSection: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  logo: {\r\n    position: \"relative\",\r\n    width: 40,\r\n    height: 40,\r\n    [theme.breakpoints.down(460)]: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    marginRight: 5,\r\n  },\r\n  titleLogo: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  date: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    margin: \"0px 10px 0px 10px\",\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 12,\r\n    },\r\n  },\r\n  appBarIcon: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n    focusVisible: false,\r\n    \"&:focus\": {\r\n      color: deepOrange[500],\r\n    },\r\n    [theme.breakpoints.down(460)]: {\r\n      fontSize: 24,\r\n    },\r\n  },\r\n  gridElement1: {\r\n    gridColumnStart: 1,\r\n    \"&:focus\": { outline: \"none\" },\r\n    [theme.breakpoints.down(460)]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  gridElement2: { gridColumnStart: 2, \"&:focus\": { outline: \"none\" } },\r\n  gridElement3: { gridColumnStart: 3, \"&:focus\": { outline: \"none\" } },\r\n}));\r\n\r\nfunction WalletNavBar() {\r\n  //useStyles from Material-UI\r\n  const classes = useStyles();\r\n\r\n  // UseStates\r\n  const [windowWidth, setWindowWidth] = useState();\r\n\r\n  // Redux : dispatch and selectors\r\n  const dateFromSelector = useSelector((state) => state.expenses.dateFrom);\r\n  const dateToSelector = useSelector((state) => state.expenses.dateTo);\r\n\r\n  const updateWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWindowWidth);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWindowWidth);\r\n    };\r\n  }, [window.Width]);\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolBar}>\r\n        <div className={classes.rowSection}>\r\n          <img src={walletLogo} alt=\"logo\" className={classes.logo} />\r\n          {windowWidth > 480 && <h1 className={classes.titleLogo}>Wallet</h1>}\r\n        </div>\r\n        <div className={classes.rowSection}>\r\n          <h2 className={classes.date}>\r\n            {new Date(dateFromSelector).getDate()}-\r\n            {new Date(dateFromSelector).getMonth() + 1}-\r\n            {new Date(dateFromSelector).getFullYear()}\r\n          </h2>\r\n          <h2 className={classes.date}>\r\n            {new Date(dateFromSelector).getDate()}-\r\n            {new Date(dateFromSelector).getMonth() + 1}-\r\n            {new Date(dateFromSelector).getFullYear()}\r\n          </h2>\r\n        </div>\r\n        <div className={styles.gridMenu}>\r\n          {/* <MenuTheme />\r\n          <IconButton size=\"small\" className={classes.gridElement2}>\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <ChatIcon className={classes.appBarIcon} />\r\n            </Badge>\r\n          </IconButton> */}\r\n          <MenuUser />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default WalletNavBar;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTimeFilter.js",["399","400","401","402","403","404","405"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\n// Redux Import\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setExpenses,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setSubExpenses,\r\n} from \"./features/expensesSlice\";\r\nimport {\r\n  setEarnings,\r\n  setDateFromEarnings,\r\n  setDateToEarnings,\r\n  setSubEarnings,\r\n} from \"./features/earningsSlice\";\r\n\r\n// Styling import\r\nimport styles from \"./WalletTimeFilter.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { teal, grey, lightBlue } from \"@material-ui/core/colors\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  datePicker: {\r\n    width: 200,\r\n    alignSelf: \"center\",\r\n  },\r\n  dateRangeButton: {\r\n    fontWeight: \"bold\",\r\n    color: grey[600],\r\n  },\r\n  refreshButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n    backgroundColor: teal[500],\r\n    color: \"white\",\r\n    borderRadius: \"4px\",\r\n    padding: 10,\r\n    marginLeft: 20,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[300],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n    [theme.breakpoints.down(520)]: {\r\n      fontSize: 12,\r\n      marginLeft: 5,\r\n    },\r\n  },\r\n  refreshIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst useStyleTextFieldLabel = makeStyles((theme) => ({\r\n  root: {\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {},\r\n    \"&$focused\": {},\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nconst useStyleTextField = makeStyles((theme) => ({\r\n  root: {\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(380)]: {\r\n      fontSize: 12,\r\n    },\r\n    \"&$focused\": {\r\n      color: lightBlue[300],\r\n      borderBottomColor: teal[300],\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction WalletTimeFilter() {\r\n  // Styling function\r\n  const classes = useStyles();\r\n  const classesTextFieldLabel = useStyleTextFieldLabel();\r\n  const classesTextField = useStyleTextField();\r\n\r\n  //  useState for window innerWidth\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const updateWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWindowWidth);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateWindowWidth);\r\n    };\r\n  });\r\n\r\n  // Dispatch for Reducer Redux\r\n  const dispatch = useDispatch();\r\n\r\n  // Selector of redux data store\r\n  const expenses = useSelector((state) => state.expenses.expenses);\r\n  const earnings = useSelector((state) => state.earnings.earnings);\r\n  const dateFromSelector = useSelector((state) => state.expenses.from);\r\n  const dateToSelector = useSelector((state) => state.expenses.to);\r\n\r\n  // useState\r\n  const [from, setFrom] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  const [to, setTo] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  // Functions\r\n\r\n  const refreshData = () => {\r\n    // convert date from String to Date\r\n    const fromDate = new Date(from);\r\n    const toDate = new Date(to);\r\n    const subExp = [];\r\n    const subEarn = [];\r\n\r\n    // select data of expenses.expenses Slice between from and to\r\n    expenses.forEach((expense) => {\r\n      let expenseDate = new Date(expense.date);\r\n      if (expenseDate >= fromDate && expenseDate <= toDate) {\r\n        subExp.push(expense);\r\n      }\r\n    });\r\n\r\n    dispatch(setSubExpenses(subExp));\r\n\r\n    // select data of earnings.earnings Slice between from and to\r\n    earnings.forEach((earning) => {\r\n      let earningDate = new Date(earning.date);\r\n      if (earningDate >= fromDate && earningDate <= toDate) {\r\n        subEarn.push(earning);\r\n      }\r\n    });\r\n\r\n    dispatch(setSubEarnings(subEarn));\r\n  };\r\n\r\n  // Refresh subExpenses and subEarnings after changing the dates\r\n  const refresh = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Update from and to in the Redux datastore\r\n    dispatch(setDateFrom(from));\r\n    dispatch(setDateTo(to));\r\n    dispatch(setDateFromEarnings(from));\r\n    dispatch(setDateToEarnings(to));\r\n\r\n    refreshData();\r\n  };\r\n\r\n  // This useEffect is used for updating subExpenses and subEarnings in the Redux Store when the user creates a new earning or expense\r\n  useEffect(() => {\r\n    refreshData();\r\n  }, [expenses, earnings]);\r\n\r\n  // Initial useEffect in order to set the state of from and to\r\n  useEffect(() => {\r\n    dispatch(setDateFrom(from));\r\n    dispatch(setDateTo(to));\r\n    dispatch(setDateFromEarnings(from));\r\n    dispatch(setDateToEarnings(to));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.box}>\r\n      <TextField\r\n        label=\"From\"\r\n        type=\"date\"\r\n        value={from}\r\n        InputProps={{\r\n          classes: classesTextField,\r\n        }}\r\n        InputLabelProps={{\r\n          classes: classesTextFieldLabel,\r\n        }}\r\n        className={classes.datePicker}\r\n        onChange={(e) => setFrom(e.target.value)}\r\n      />\r\n      <TextField\r\n        label=\"To\"\r\n        type=\"date\"\r\n        value={to}\r\n        InputProps={{\r\n          classes: classesTextField,\r\n        }}\r\n        InputLabelProps={{\r\n          classes: classesTextFieldLabel,\r\n        }}\r\n        className={classes.datePicker}\r\n        onChange={(e) => setTo(e.target.value)}\r\n      />\r\n      <Button className={classes.refreshButton} onClick={(e) => refresh(e)}>\r\n        <RefreshIcon className={classes.refreshIcon} />\r\n        {windowWidth > 480 ? \"Refresh\" : \"\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WalletTimeFilter;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletMainContainer.js",["406"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNewEarnings.js",["407","408","409","410","411"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axiosExpenses from \"./apis/axiosExpenses\";\r\nimport {\r\n  setExpenses,\r\n  switchReload,\r\n  changeAlertAdd,\r\n} from \"./features/expensesSlice\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport isEmpty from \"is-empty\";\r\nimport moment from \"moment\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  teal,\r\n  grey,\r\n  deepOrange,\r\n  indigo,\r\n  deepPurple,\r\n} from \"@material-ui/core/colors\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { IconFlagUS, IconFlagEU, IconFlagUK } from \"material-ui-flags\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  newEarningsButton: {\r\n    gridColumn: \"2 / 2\",\r\n    gridRow: \"1 / 3\",\r\n    color: \"white\",\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: teal[700],\r\n    boxShadow: \"0 0 10px 0 rgba(150, 150, 150, 0.3)\",\r\n    color: \"rgba(255,255,255,0.8)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"4px\",\r\n    padding: 10,\r\n    \"&:hover\": {\r\n      backgroundColor: teal[200],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  newEarningsIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"rgba(255,255,255,0.8)\",\r\n    height: 32,\r\n    width: 32,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    width: 500,\r\n    borderRadius: 6,\r\n  },\r\n  space: {\r\n    height: 50,\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submitButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: teal[500],\r\n    color: \"white\",\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      backgroundColor: teal[800],\r\n    },\r\n  },\r\n  submitButtonDisabled: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: grey[300],\r\n    color: \"white\",\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  cancelButton: {\r\n    color: grey[500],\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      color: grey[800],\r\n    },\r\n  },\r\n  textField: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n  },\r\n  addCategoryButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"4px\",\r\n    color: \"white\",\r\n    backgroundColor: deepOrange[500],\r\n    height: \"auto\",\r\n    \"&:hover\": {\r\n      backgroundColor: deepOrange[300],\r\n    },\r\n  },\r\n  rowBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  alignRight: {\r\n    justifySelf: \"flex-end\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  alignLeft: {\r\n    justifySelf: \"flex-start\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  categoryContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 10,\r\n  },\r\n  category: {\r\n    backgroundColor: indigo[300],\r\n    padding: 4,\r\n    color: \"white\",\r\n    borderRadius: 4,\r\n    margin: 4,\r\n  },\r\n  title: {\r\n    color: teal[500],\r\n  },\r\n}));\r\n\r\nfunction WalletNewEarnings() {\r\n  const classes = useStyles();\r\n\r\n  const listCurrencies = [\r\n    { value: \"EUR\", flag: <IconFlagEU /> },\r\n    { value: \"USD\", flag: <IconFlagUS /> },\r\n    { value: \"GBP\", flag: <IconFlagUK /> },\r\n  ];\r\n\r\n  const typeList = [\"Cash\", \"Cheque\", \"Bank Transfer\"];\r\n  const bankList = [\r\n    \"Cash\",\r\n    \"Revolut\",\r\n    \"Caisse Epargne\",\r\n    \"BNP Paribas\",\r\n    \"Societe Generale\",\r\n    \"HSBC\",\r\n    \"Credit agricole\",\r\n    \"Boursorama\",\r\n    \"Other\",\r\n  ];\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [from, setFrom] = useState();\r\n  const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [amount, setAmount] = useState(0);\r\n  const [currency, setCurrency] = useState();\r\n  const [type, setType] = useState();\r\n  const [sourceType, setSourceType] = useState();\r\n  const [disableButton, setDisableButton] = useState(true);\r\n\r\n  //useSelector\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // useDispatch\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpen = () => {\r\n    setDate(moment().format(\"YYYY-MM-DD\"));\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    // Reinitialise the state\r\n    setFrom();\r\n    setDate();\r\n    setAmount();\r\n    setCurrency(\"\");\r\n    setType();\r\n    setSourceType();\r\n    setOpen(false);\r\n    setDisableButton(true);\r\n  };\r\n\r\n  const addNewEarnings = async (e) => {\r\n    e.preventDefault();\r\n    // create new Expense\r\n    let newExpense = {};\r\n    newExpense.userId = userId;\r\n    newExpense.type = type;\r\n    newExpense.source_type = sourceType;\r\n    newExpense.date = parseInt(Date.parse(date));\r\n    newExpense.name = from;\r\n    newExpense.amount = parseInt(amount);\r\n    newExpense.currency = currency;\r\n\r\n    // Push to Database\r\n    const response = await axiosExpenses.post(\"/earning\", newExpense);\r\n\r\n    // Close the modal\r\n    if (response.status === 200) {\r\n      dispatch(switchReload());\r\n      dispatch(changeAlertAdd(\"success\"));\r\n    } else {\r\n      dispatch(changeAlertAdd(\"error\"));\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isEmpty(from) &&\r\n      !isEmpty(date) &&\r\n      !isEmpty(amount) &&\r\n      !isEmpty(currency)\r\n    ) {\r\n      setDisableButton(false);\r\n    }\r\n  }, [from, date, amount, currency]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button className={classes.newEarningsButton} onClick={handleOpen}>\r\n        <AddCircleIcon className={classes.newEarningsIcon} />\r\n        NEW EARNINGS\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"Modal-create-new-expense\"\r\n        aria-describedby=\"Modal-create-new-expense\"\r\n        className={classes.modal}\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 className={classes.title}>New Earnings</h2>\r\n            <form className={classes.form}>\r\n              <TextField\r\n                required\r\n                multiline\r\n                className={classes.textField}\r\n                type=\"text\"\r\n                label=\"From\"\r\n                onChange={(e) => setFrom(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                className={classes.textField}\r\n                type=\"date\"\r\n                label=\"Date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                label=\"Amount\"\r\n                className={classes.textField}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                select\r\n                type=\"text\"\r\n                label=\"Currency\"\r\n                value={currency ? currency : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setCurrency(e.target.value)}\r\n              >\r\n                {listCurrencies.map((currency) => (\r\n                  <MenuItem key={uuidv4()} value={currency.value}>\r\n                    {currency.flag} {currency.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                type=\"text\"\r\n                label=\"Type\"\r\n                value={type ? type : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setType(e.target.value)}\r\n              >\r\n                {typeList.map((type) => (\r\n                  <MenuItem key={uuidv4()} value={type}>\r\n                    {type}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                type=\"text\"\r\n                label=\"Bank\"\r\n                value={sourceType ? sourceType : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setSourceType(e.target.value)}\r\n              >\r\n                {bankList.map((sourceType) => (\r\n                  <MenuItem key={uuidv4()} value={sourceType}>\r\n                    {sourceType}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <div className={classes.space} />\r\n              <div className={`${classes.rowBox} ${classes.alignRight}`}>\r\n                <Button\r\n                  className={`${classes.cancelButton} ${classes.alignRight}`}\r\n                  onClick={(e) => handleClose(e)}\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n                <Button\r\n                  disabled={disableButton}\r\n                  className={`${\r\n                    disableButton\r\n                      ? classes.submitButtonDisabled\r\n                      : classes.submitButton\r\n                  } ${classes.alignRight}`}\r\n                  type=\"submit\"\r\n                  onClick={(e) => addNewEarnings(e)}\r\n                >\r\n                  <AddIcon className={classes.newEarningsIcon} />\r\n                  ADD NEW EARNINGS\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WalletNewEarnings;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletNewExpense.js",["412","413","414","415","416","417","418","419"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axiosExpenses from \"./apis/axiosExpenses\";\r\nimport {\r\n  setExpenses,\r\n  switchReload,\r\n  changeAlertAdd,\r\n} from \"./features/expensesSlice\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport isEmpty from \"is-empty\";\r\nimport moment from \"moment\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { CenterFocusStrong, FullscreenExit } from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  teal,\r\n  grey,\r\n  deepOrange,\r\n  indigo,\r\n  deepPurple,\r\n} from \"@material-ui/core/colors\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { IconFlagUS, IconFlagEU, IconFlagUK } from \"material-ui-flags\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  newExpenseButton: {\r\n    gridColumn: \"2 / 2\",\r\n    gridRow: \"1 / 3\",\r\n    color: \"white\",\r\n    alignSelf: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: deepOrange[\"A700\"],\r\n    boxShadow: \"0 0 10px 0 rgba(150, 150, 150, 0.3)\",\r\n    color: \"rgba(255,255,255,0.8)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"4px\",\r\n    padding: 10,\r\n    \"&:hover\": {\r\n      backgroundColor: deepOrange[200],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  newExpenseIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color: \"rgba(255,255,255,0.8)\",\r\n    height: 32,\r\n    width: 32,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    width: 500,\r\n    borderRadius: 6,\r\n  },\r\n  space: {\r\n    height: 50,\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submitButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: deepOrange[500],\r\n    color: \"white\",\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      backgroundColor: deepOrange[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  submitButtonDisabled: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: grey[300],\r\n    color: \"white\",\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n  },\r\n  cancelButton: {\r\n    color: grey[500],\r\n    justifySelf: \"end\",\r\n    borderRadius: \"4px\",\r\n    \"&:hover\": {\r\n      color: grey[800],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  textField: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n  },\r\n  addCategoryButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"4px\",\r\n    color: \"white\",\r\n    backgroundColor: deepOrange[500],\r\n    height: \"auto\",\r\n    \"&:hover\": {\r\n      backgroundColor: deepOrange[300],\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  rowBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  alignRight: {\r\n    justifySelf: \"flex-end\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  alignLeft: {\r\n    justifySelf: \"flex-start\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  categoryContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 10,\r\n  },\r\n  category: {\r\n    backgroundColor: indigo[300],\r\n    padding: 4,\r\n    color: \"white\",\r\n    borderRadius: 4,\r\n    margin: 4,\r\n  },\r\n  title: {\r\n    color: deepOrange[500],\r\n  },\r\n}));\r\n\r\nfunction WalletNewExpense() {\r\n  const classes = useStyles();\r\n\r\n  // default lists\r\n  const listCategory = [\r\n    \"Groceries\",\r\n    \"Shopping\",\r\n    \"Bill\",\r\n    \"Rent payment\",\r\n    \"Entertainment\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const listCurrencies = [\r\n    { value: \"EUR\", flag: <IconFlagEU /> },\r\n    { value: \"USD\", flag: <IconFlagUS /> },\r\n    { value: \"GBP\", flag: <IconFlagUK /> },\r\n  ];\r\n\r\n  const typeList = [\"Cash\", \"Credit Card\"];\r\n  const sourceTypeList = [\r\n    \"Cash\",\r\n    \"Revolut\",\r\n    \"Caisse Epargne\",\r\n    \"BNP Paribas\",\r\n    \"Societe Generale\",\r\n    \"HSBC\",\r\n    \"Credit agricole\",\r\n    \"Boursorama\",\r\n    \"Other\",\r\n  ];\r\n\r\n  // useState\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [date, setDate] = useState();\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [category, setCategory] = useState();\r\n  const [amount, setAmount] = useState(0);\r\n  const [currency, setCurrency] = useState();\r\n  const [type, setType] = useState();\r\n  const [sourceType, setSourceType] = useState();\r\n  const [disableButton, setDisableButton] = useState(true);\r\n\r\n  //useSelector\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  // useDispatch\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCategory = (val) => {\r\n    if (!isEmpty(val)) {\r\n      if (!categoryList.includes(val)) {\r\n        const copyCategoryList = categoryList.slice();\r\n        copyCategoryList.push(val);\r\n        setCategoryList(copyCategoryList);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setDate(moment().format(\"YYYY-MM-DD\"));\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    // Reinitialise the state\r\n    setName();\r\n    setDate();\r\n    setCategory();\r\n    setCategoryList([]);\r\n    setAmount();\r\n    setCurrency();\r\n    setType();\r\n    setSourceType();\r\n    setOpen(false);\r\n    setDisableButton(true);\r\n  };\r\n\r\n  const addNewExpense = async (e) => {\r\n    e.preventDefault();\r\n    // create new Expense\r\n    let newExpense = {};\r\n    newExpense.userId = userId;\r\n    newExpense.type = type;\r\n    newExpense.source_type = sourceType;\r\n    newExpense.date = parseInt(Date.parse(date));\r\n\r\n    newExpense.categories = !isEmpty(categoryList) ? categoryList : [\"Other\"];\r\n    newExpense.name = name;\r\n    newExpense.amount = parseInt(amount);\r\n    newExpense.currency = currency;\r\n\r\n    // Push to Database\r\n    const response = await axiosExpenses.post(\"/expense\", newExpense);\r\n\r\n    // Close the modal\r\n    if (response.status === 200) {\r\n      dispatch(switchReload());\r\n      dispatch(changeAlertAdd(\"success\"));\r\n    } else {\r\n      dispatch(changeAlertAdd(\"error\"));\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !isEmpty(name) &&\r\n      !isEmpty(date) &&\r\n      !isEmpty(amount) &&\r\n      !isEmpty(currency)\r\n    ) {\r\n      setDisableButton(false);\r\n    }\r\n  }, [name, date, amount, currency]);\r\n\r\n  useEffect(() => {}, [categoryList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button className={classes.newExpenseButton} onClick={handleOpen}>\r\n        <AddCircleIcon className={classes.newExpenseIcon} />\r\n        NEW EXPENSE\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"Modal-create-new-expense\"\r\n        aria-describedby=\"Modal-create-new-expense\"\r\n        className={classes.modal}\r\n        open={open}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 className={classes.title}>New Expense</h2>\r\n            <form className={classes.form}>\r\n              <TextField\r\n                required\r\n                multiline\r\n                className={classes.textField}\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                className={classes.textField}\r\n                type=\"date\"\r\n                label=\"Date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n              <div className={classes.rowBox}>\r\n                <TextField\r\n                  select\r\n                  type=\"text\"\r\n                  label=\"Category\"\r\n                  className={classes.textField}\r\n                  style={{ marginRight: 10, marginBottom: 0 }}\r\n                  value={category ? category : \"\"}\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                >\r\n                  {listCategory.map((cat) => (\r\n                    <MenuItem key={cat} value={cat}>\r\n                      {cat}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <Button\r\n                  className={`${classes.addCategoryButton} ${classes.alignRight}`}\r\n                  onClick={() => handleCategory(category)}\r\n                >\r\n                  <AddIcon />\r\n                  Add\r\n                </Button>\r\n              </div>\r\n              <div className={classes.categoryContainer}>\r\n                {categoryList.map((category) => (\r\n                  <p key={uuidv4()} className={classes.category}>\r\n                    {category}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                label=\"Amount\"\r\n                className={classes.textField}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n              <TextField\r\n                required\r\n                select\r\n                type=\"text\"\r\n                label=\"Currency\"\r\n                value={currency ? currency : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setCurrency(e.target.value)}\r\n              >\r\n                {listCurrencies.map((currency) => (\r\n                  <MenuItem key={uuidv4()} value={currency.value}>\r\n                    {currency.flag} {currency.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                type=\"text\"\r\n                label=\"Type\"\r\n                value={type ? type : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setType(e.target.value)}\r\n              >\r\n                {typeList.map((type) => (\r\n                  <MenuItem key={uuidv4()} value={type}>\r\n                    {type}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                type=\"text\"\r\n                label=\"Source Type\"\r\n                value={sourceType ? sourceType : \"\"}\r\n                className={classes.textField}\r\n                onChange={(e) => setSourceType(e.target.value)}\r\n              >\r\n                {sourceTypeList.map((sourceType) => (\r\n                  <MenuItem key={uuidv4()} value={sourceType}>\r\n                    {sourceType}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <div className={classes.space} />\r\n              <div className={`${classes.rowBox} ${classes.alignRight}`}>\r\n                <Button\r\n                  className={`${classes.cancelButton} ${classes.alignRight}`}\r\n                  onClick={(e) => handleClose(e)}\r\n                >\r\n                  CANCEL\r\n                </Button>\r\n                <Button\r\n                  disabled={disableButton}\r\n                  className={`${\r\n                    disableButton\r\n                      ? classes.submitButtonDisabled\r\n                      : classes.submitButton\r\n                  } ${classes.alignRight}`}\r\n                  type=\"submit\"\r\n                  onClick={(e) => addNewExpense(e)}\r\n                >\r\n                  <AddIcon className={classes.newExpenseIcon} />\r\n                  ADD NEW EXPENSE\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WalletNewExpense;\r\n","D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\apis\\axiosExpenses.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\apis\\axiosUsers.js",[],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\MenuTheme.js",["420"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\MenuUser.js",["421","422","423","424","425","426","427","428"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletExpenseGrid.js",["429","430","431","432"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTotalEarnings.js",["433","434","435","436"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\WalletTotalExpenses.js",["437","438","439","440"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\BarChart.js",["441","442","443","444","445","446","447","448"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\Loader.js",["449","450","451"],"D:\\Projects\\Javascript\\Expenses\\expenses_official\\src\\PieChart.js",["452","453","454","455","456","457"],{"ruleId":"458","replacedBy":"459"},{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","severity":1,"message":"463","line":99,"column":10,"nodeType":"464","messageId":"465","endLine":99,"endColumn":31},{"ruleId":"462","severity":1,"message":"466","line":99,"column":33,"nodeType":"464","messageId":"465","endLine":99,"endColumn":57},{"ruleId":"462","severity":1,"message":"467","line":110,"column":9,"nodeType":"464","messageId":"465","endLine":110,"endColumn":15},{"ruleId":"468","severity":1,"message":"469","line":136,"column":28,"nodeType":"470","messageId":"471","endLine":136,"endColumn":30},{"ruleId":"462","severity":1,"message":"472","line":8,"column":10,"nodeType":"464","messageId":"465","endLine":8,"endColumn":21},{"ruleId":"462","severity":1,"message":"473","line":10,"column":22,"nodeType":"464","messageId":"465","endLine":10,"endColumn":35},{"ruleId":"462","severity":1,"message":"474","line":17,"column":10,"nodeType":"464","messageId":"465","endLine":17,"endColumn":19},{"ruleId":"462","severity":1,"message":"475","line":19,"column":10,"nodeType":"464","messageId":"465","endLine":19,"endColumn":20},{"ruleId":"462","severity":1,"message":"476","line":1,"column":10,"nodeType":"464","messageId":"465","endLine":1,"endColumn":15},{"ruleId":"462","severity":1,"message":"477","line":2,"column":17,"nodeType":"464","messageId":"465","endLine":2,"endColumn":23},{"ruleId":"462","severity":1,"message":"478","line":3,"column":22,"nodeType":"464","messageId":"465","endLine":3,"endColumn":30},{"ruleId":"462","severity":1,"message":"479","line":9,"column":8,"nodeType":"464","messageId":"465","endLine":9,"endColumn":24},{"ruleId":"462","severity":1,"message":"480","line":10,"column":8,"nodeType":"464","messageId":"465","endLine":10,"endColumn":25},{"ruleId":"462","severity":1,"message":"481","line":12,"column":8,"nodeType":"464","messageId":"465","endLine":12,"endColumn":15},{"ruleId":"462","severity":1,"message":"482","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":14},{"ruleId":"462","severity":1,"message":"483","line":20,"column":3,"nodeType":"464","messageId":"465","endLine":20,"endColumn":12},{"ruleId":"462","severity":1,"message":"484","line":21,"column":3,"nodeType":"464","messageId":"465","endLine":21,"endColumn":17},{"ruleId":"462","severity":1,"message":"485","line":25,"column":3,"nodeType":"464","messageId":"465","endLine":25,"endColumn":22},{"ruleId":"462","severity":1,"message":"486","line":26,"column":3,"nodeType":"464","messageId":"465","endLine":26,"endColumn":20},{"ruleId":"462","severity":1,"message":"487","line":27,"column":3,"nodeType":"464","messageId":"465","endLine":27,"endColumn":17},{"ruleId":"462","severity":1,"message":"488","line":29,"column":10,"nodeType":"464","messageId":"465","endLine":29,"endColumn":17},{"ruleId":"462","severity":1,"message":"489","line":34,"column":16,"nodeType":"464","messageId":"465","endLine":34,"endColumn":26},{"ruleId":"462","severity":1,"message":"490","line":68,"column":9,"nodeType":"464","messageId":"465","endLine":68,"endColumn":16},{"ruleId":"462","severity":1,"message":"491","line":71,"column":10,"nodeType":"464","messageId":"465","endLine":71,"endColumn":19},{"ruleId":"462","severity":1,"message":"492","line":72,"column":10,"nodeType":"464","messageId":"465","endLine":72,"endColumn":23},{"ruleId":"462","severity":1,"message":"493","line":73,"column":10,"nodeType":"464","messageId":"465","endLine":73,"endColumn":23},{"ruleId":"462","severity":1,"message":"494","line":73,"column":25,"nodeType":"464","messageId":"465","endLine":73,"endColumn":41},{"ruleId":"462","severity":1,"message":"495","line":78,"column":9,"nodeType":"464","messageId":"465","endLine":78,"endColumn":17},{"ruleId":"462","severity":1,"message":"496","line":82,"column":9,"nodeType":"464","messageId":"465","endLine":82,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":152,"column":6,"nodeType":"499","endLine":152,"endColumn":14,"suggestions":"500"},{"ruleId":"462","severity":1,"message":"501","line":1,"column":27,"nodeType":"464","messageId":"465","endLine":1,"endColumn":36},{"ruleId":"462","severity":1,"message":"481","line":3,"column":8,"nodeType":"464","messageId":"465","endLine":3,"endColumn":15},{"ruleId":"462","severity":1,"message":"502","line":5,"column":8,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"503","line":31,"column":21,"nodeType":"464","messageId":"465","endLine":31,"endColumn":33},{"ruleId":"462","severity":1,"message":"501","line":1,"column":17,"nodeType":"464","messageId":"465","endLine":1,"endColumn":26},{"ruleId":"462","severity":1,"message":"504","line":3,"column":23,"nodeType":"464","messageId":"465","endLine":3,"endColumn":34},{"ruleId":"462","severity":1,"message":"505","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":24},{"ruleId":"462","severity":1,"message":"502","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"506","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"508","line":17,"column":10,"nodeType":"464","messageId":"465","endLine":17,"endColumn":27},{"ruleId":"462","severity":1,"message":"509","line":17,"column":29,"nodeType":"464","messageId":"465","endLine":17,"endColumn":43},{"ruleId":"462","severity":1,"message":"510","line":22,"column":3,"nodeType":"464","messageId":"465","endLine":22,"endColumn":7},{"ruleId":"462","severity":1,"message":"511","line":26,"column":3,"nodeType":"464","messageId":"465","endLine":26,"endColumn":13},{"ruleId":"462","severity":1,"message":"512","line":29,"column":8,"nodeType":"464","messageId":"465","endLine":29,"endColumn":18},{"ruleId":"462","severity":1,"message":"513","line":30,"column":8,"nodeType":"464","messageId":"465","endLine":30,"endColumn":14},{"ruleId":"514","severity":1,"message":"515","line":50,"column":5,"nodeType":"516","messageId":"471","endLine":50,"endColumn":10},{"ruleId":"462","severity":1,"message":"517","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":31},{"ruleId":"462","severity":1,"message":"510","line":10,"column":10,"nodeType":"464","messageId":"465","endLine":10,"endColumn":14},{"ruleId":"462","severity":1,"message":"518","line":11,"column":8,"nodeType":"464","messageId":"465","endLine":11,"endColumn":26},{"ruleId":"497","severity":1,"message":"519","line":66,"column":6,"nodeType":"499","endLine":66,"endColumn":19,"suggestions":"520"},{"ruleId":"462","severity":1,"message":"521","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"522","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":7},{"ruleId":"462","severity":1,"message":"523","line":21,"column":10,"nodeType":"464","messageId":"465","endLine":21,"endColumn":30},{"ruleId":"462","severity":1,"message":"508","line":22,"column":10,"nodeType":"464","messageId":"465","endLine":22,"endColumn":27},{"ruleId":"462","severity":1,"message":"524","line":99,"column":9,"nodeType":"464","messageId":"465","endLine":99,"endColumn":24},{"ruleId":"497","severity":1,"message":"525","line":179,"column":6,"nodeType":"499","endLine":179,"endColumn":19,"suggestions":"526"},{"ruleId":"462","severity":1,"message":"517","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":31},{"ruleId":"462","severity":1,"message":"489","line":10,"column":16,"nodeType":"464","messageId":"465","endLine":10,"endColumn":26},{"ruleId":"462","severity":1,"message":"518","line":11,"column":8,"nodeType":"464","messageId":"465","endLine":11,"endColumn":26},{"ruleId":"497","severity":1,"message":"527","line":76,"column":6,"nodeType":"499","endLine":76,"endColumn":19,"suggestions":"528"},{"ruleId":"462","severity":1,"message":"529","line":3,"column":15,"nodeType":"464","messageId":"465","endLine":3,"endColumn":19},{"ruleId":"462","severity":1,"message":"521","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"530","line":10,"column":8,"nodeType":"464","messageId":"465","endLine":10,"endColumn":15},{"ruleId":"462","severity":1,"message":"523","line":12,"column":10,"nodeType":"464","messageId":"465","endLine":12,"endColumn":30},{"ruleId":"462","severity":1,"message":"531","line":13,"column":10,"nodeType":"464","messageId":"465","endLine":13,"endColumn":26},{"ruleId":"462","severity":1,"message":"524","line":62,"column":9,"nodeType":"464","messageId":"465","endLine":62,"endColumn":24},{"ruleId":"462","severity":1,"message":"532","line":68,"column":19,"nodeType":"464","messageId":"465","endLine":68,"endColumn":29},{"ruleId":"497","severity":1,"message":"533","line":182,"column":6,"nodeType":"499","endLine":182,"endColumn":19,"suggestions":"534"},{"ruleId":"462","severity":1,"message":"504","line":3,"column":23,"nodeType":"464","messageId":"465","endLine":3,"endColumn":34},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"482","line":6,"column":3,"nodeType":"464","messageId":"465","endLine":6,"endColumn":14},{"ruleId":"462","severity":1,"message":"483","line":7,"column":3,"nodeType":"464","messageId":"465","endLine":7,"endColumn":12},{"ruleId":"462","severity":1,"message":"484","line":8,"column":3,"nodeType":"464","messageId":"465","endLine":8,"endColumn":17},{"ruleId":"462","severity":1,"message":"535","line":15,"column":8,"nodeType":"464","messageId":"465","endLine":15,"endColumn":17},{"ruleId":"462","severity":1,"message":"536","line":18,"column":8,"nodeType":"464","messageId":"465","endLine":18,"endColumn":18},{"ruleId":"462","severity":1,"message":"537","line":20,"column":8,"nodeType":"464","messageId":"465","endLine":20,"endColumn":25},{"ruleId":"462","severity":1,"message":"538","line":21,"column":8,"nodeType":"464","messageId":"465","endLine":21,"endColumn":16},{"ruleId":"462","severity":1,"message":"539","line":22,"column":8,"nodeType":"464","messageId":"465","endLine":22,"endColumn":16},{"ruleId":"462","severity":1,"message":"476","line":24,"column":8,"nodeType":"464","messageId":"465","endLine":24,"endColumn":13},{"ruleId":"462","severity":1,"message":"540","line":98,"column":9,"nodeType":"464","messageId":"465","endLine":98,"endColumn":23},{"ruleId":"497","severity":1,"message":"541","line":109,"column":6,"nodeType":"499","endLine":109,"endColumn":20,"suggestions":"542"},{"ruleId":"462","severity":1,"message":"477","line":1,"column":17,"nodeType":"464","messageId":"465","endLine":1,"endColumn":23},{"ruleId":"462","severity":1,"message":"507","line":7,"column":3,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"543","line":13,"column":3,"nodeType":"464","messageId":"465","endLine":13,"endColumn":14},{"ruleId":"462","severity":1,"message":"544","line":110,"column":9,"nodeType":"464","messageId":"465","endLine":110,"endColumn":25},{"ruleId":"462","severity":1,"message":"540","line":111,"column":9,"nodeType":"464","messageId":"465","endLine":111,"endColumn":23},{"ruleId":"497","severity":1,"message":"545","line":165,"column":6,"nodeType":"499","endLine":165,"endColumn":26,"suggestions":"546"},{"ruleId":"497","severity":1,"message":"547","line":173,"column":6,"nodeType":"499","endLine":173,"endColumn":8,"suggestions":"548"},{"ruleId":"462","severity":1,"message":"503","line":15,"column":21,"nodeType":"464","messageId":"465","endLine":15,"endColumn":33},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"511","line":25,"column":3,"nodeType":"464","messageId":"465","endLine":25,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":47,"column":5,"nodeType":"516","messageId":"471","endLine":47,"endColumn":10},{"ruleId":"462","severity":1,"message":"549","line":185,"column":10,"nodeType":"464","messageId":"465","endLine":185,"endColumn":22},{"ruleId":"462","severity":1,"message":"550","line":185,"column":24,"nodeType":"464","messageId":"465","endLine":185,"endColumn":39},{"ruleId":"462","severity":1,"message":"502","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"476","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":13},{"ruleId":"462","severity":1,"message":"506","line":9,"column":8,"nodeType":"464","messageId":"465","endLine":9,"endColumn":14},{"ruleId":"462","severity":1,"message":"510","line":17,"column":3,"nodeType":"464","messageId":"465","endLine":17,"endColumn":7},{"ruleId":"462","severity":1,"message":"522","line":18,"column":3,"nodeType":"464","messageId":"465","endLine":18,"endColumn":7},{"ruleId":"462","severity":1,"message":"551","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":7},{"ruleId":"462","severity":1,"message":"552","line":20,"column":3,"nodeType":"464","messageId":"465","endLine":20,"endColumn":8},{"ruleId":"462","severity":1,"message":"553","line":21,"column":3,"nodeType":"464","messageId":"465","endLine":21,"endColumn":7},{"ruleId":"462","severity":1,"message":"554","line":71,"column":9,"nodeType":"464","messageId":"465","endLine":71,"endColumn":21},{"ruleId":"462","severity":1,"message":"472","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":21},{"ruleId":"458","replacedBy":"555"},{"ruleId":"460","replacedBy":"556"},{"ruleId":"462","severity":1,"message":"557","line":16,"column":8,"nodeType":"464","messageId":"465","endLine":16,"endColumn":14},{"ruleId":"462","severity":1,"message":"476","line":1,"column":10,"nodeType":"464","messageId":"465","endLine":1,"endColumn":15},{"ruleId":"462","severity":1,"message":"477","line":2,"column":17,"nodeType":"464","messageId":"465","endLine":2,"endColumn":23},{"ruleId":"462","severity":1,"message":"478","line":3,"column":22,"nodeType":"464","messageId":"465","endLine":3,"endColumn":30},{"ruleId":"462","severity":1,"message":"479","line":9,"column":8,"nodeType":"464","messageId":"465","endLine":9,"endColumn":24},{"ruleId":"462","severity":1,"message":"480","line":10,"column":8,"nodeType":"464","messageId":"465","endLine":10,"endColumn":25},{"ruleId":"462","severity":1,"message":"481","line":12,"column":8,"nodeType":"464","messageId":"465","endLine":12,"endColumn":15},{"ruleId":"462","severity":1,"message":"482","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":14},{"ruleId":"462","severity":1,"message":"483","line":20,"column":3,"nodeType":"464","messageId":"465","endLine":20,"endColumn":12},{"ruleId":"462","severity":1,"message":"484","line":21,"column":3,"nodeType":"464","messageId":"465","endLine":21,"endColumn":17},{"ruleId":"462","severity":1,"message":"485","line":25,"column":3,"nodeType":"464","messageId":"465","endLine":25,"endColumn":22},{"ruleId":"462","severity":1,"message":"486","line":26,"column":3,"nodeType":"464","messageId":"465","endLine":26,"endColumn":20},{"ruleId":"462","severity":1,"message":"487","line":27,"column":3,"nodeType":"464","messageId":"465","endLine":27,"endColumn":17},{"ruleId":"462","severity":1,"message":"488","line":29,"column":10,"nodeType":"464","messageId":"465","endLine":29,"endColumn":17},{"ruleId":"462","severity":1,"message":"489","line":34,"column":16,"nodeType":"464","messageId":"465","endLine":34,"endColumn":26},{"ruleId":"462","severity":1,"message":"490","line":68,"column":9,"nodeType":"464","messageId":"465","endLine":68,"endColumn":16},{"ruleId":"462","severity":1,"message":"491","line":71,"column":10,"nodeType":"464","messageId":"465","endLine":71,"endColumn":19},{"ruleId":"462","severity":1,"message":"492","line":72,"column":10,"nodeType":"464","messageId":"465","endLine":72,"endColumn":23},{"ruleId":"462","severity":1,"message":"493","line":73,"column":10,"nodeType":"464","messageId":"465","endLine":73,"endColumn":23},{"ruleId":"462","severity":1,"message":"494","line":73,"column":25,"nodeType":"464","messageId":"465","endLine":73,"endColumn":41},{"ruleId":"462","severity":1,"message":"495","line":78,"column":9,"nodeType":"464","messageId":"465","endLine":78,"endColumn":17},{"ruleId":"462","severity":1,"message":"496","line":82,"column":9,"nodeType":"464","messageId":"465","endLine":82,"endColumn":16},{"ruleId":"497","severity":1,"message":"498","line":148,"column":6,"nodeType":"499","endLine":148,"endColumn":14,"suggestions":"558"},{"ruleId":"462","severity":1,"message":"463","line":113,"column":10,"nodeType":"464","messageId":"465","endLine":113,"endColumn":31},{"ruleId":"462","severity":1,"message":"466","line":113,"column":33,"nodeType":"464","messageId":"465","endLine":113,"endColumn":57},{"ruleId":"462","severity":1,"message":"467","line":125,"column":9,"nodeType":"464","messageId":"465","endLine":125,"endColumn":15},{"ruleId":"468","severity":1,"message":"469","line":156,"column":28,"nodeType":"470","messageId":"471","endLine":156,"endColumn":30},{"ruleId":"468","severity":1,"message":"469","line":159,"column":26,"nodeType":"470","messageId":"471","endLine":159,"endColumn":28},{"ruleId":"462","severity":1,"message":"472","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":21},{"ruleId":"462","severity":1,"message":"472","line":8,"column":10,"nodeType":"464","messageId":"465","endLine":8,"endColumn":21},{"ruleId":"462","severity":1,"message":"473","line":10,"column":22,"nodeType":"464","messageId":"465","endLine":10,"endColumn":35},{"ruleId":"462","severity":1,"message":"474","line":17,"column":10,"nodeType":"464","messageId":"465","endLine":17,"endColumn":19},{"ruleId":"462","severity":1,"message":"475","line":19,"column":10,"nodeType":"464","messageId":"465","endLine":19,"endColumn":20},{"ruleId":"462","severity":1,"message":"502","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"502","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"504","line":3,"column":23,"nodeType":"464","messageId":"465","endLine":3,"endColumn":34},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"482","line":6,"column":3,"nodeType":"464","messageId":"465","endLine":6,"endColumn":14},{"ruleId":"462","severity":1,"message":"483","line":7,"column":3,"nodeType":"464","messageId":"465","endLine":7,"endColumn":12},{"ruleId":"462","severity":1,"message":"484","line":8,"column":3,"nodeType":"464","messageId":"465","endLine":8,"endColumn":17},{"ruleId":"462","severity":1,"message":"535","line":15,"column":8,"nodeType":"464","messageId":"465","endLine":15,"endColumn":17},{"ruleId":"462","severity":1,"message":"536","line":18,"column":8,"nodeType":"464","messageId":"465","endLine":18,"endColumn":18},{"ruleId":"462","severity":1,"message":"537","line":20,"column":8,"nodeType":"464","messageId":"465","endLine":20,"endColumn":25},{"ruleId":"462","severity":1,"message":"538","line":21,"column":8,"nodeType":"464","messageId":"465","endLine":21,"endColumn":16},{"ruleId":"462","severity":1,"message":"539","line":22,"column":8,"nodeType":"464","messageId":"465","endLine":22,"endColumn":16},{"ruleId":"462","severity":1,"message":"476","line":24,"column":8,"nodeType":"464","messageId":"465","endLine":24,"endColumn":13},{"ruleId":"462","severity":1,"message":"540","line":98,"column":9,"nodeType":"464","messageId":"465","endLine":98,"endColumn":23},{"ruleId":"497","severity":1,"message":"541","line":109,"column":6,"nodeType":"499","endLine":109,"endColumn":20,"suggestions":"559"},{"ruleId":"462","severity":1,"message":"477","line":1,"column":17,"nodeType":"464","messageId":"465","endLine":1,"endColumn":23},{"ruleId":"462","severity":1,"message":"507","line":7,"column":3,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"543","line":13,"column":3,"nodeType":"464","messageId":"465","endLine":13,"endColumn":14},{"ruleId":"462","severity":1,"message":"544","line":110,"column":9,"nodeType":"464","messageId":"465","endLine":110,"endColumn":25},{"ruleId":"462","severity":1,"message":"540","line":111,"column":9,"nodeType":"464","messageId":"465","endLine":111,"endColumn":23},{"ruleId":"497","severity":1,"message":"545","line":162,"column":6,"nodeType":"499","endLine":162,"endColumn":26,"suggestions":"560"},{"ruleId":"497","severity":1,"message":"547","line":170,"column":6,"nodeType":"499","endLine":170,"endColumn":8,"suggestions":"561"},{"ruleId":"462","severity":1,"message":"503","line":15,"column":21,"nodeType":"464","messageId":"465","endLine":15,"endColumn":33},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"511","line":25,"column":3,"nodeType":"464","messageId":"465","endLine":25,"endColumn":13},{"ruleId":"514","severity":1,"message":"515","line":47,"column":5,"nodeType":"516","messageId":"471","endLine":47,"endColumn":10},{"ruleId":"462","severity":1,"message":"549","line":185,"column":10,"nodeType":"464","messageId":"465","endLine":185,"endColumn":22},{"ruleId":"462","severity":1,"message":"550","line":185,"column":24,"nodeType":"464","messageId":"465","endLine":185,"endColumn":39},{"ruleId":"462","severity":1,"message":"507","line":5,"column":3,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"508","line":17,"column":10,"nodeType":"464","messageId":"465","endLine":17,"endColumn":27},{"ruleId":"462","severity":1,"message":"509","line":17,"column":29,"nodeType":"464","messageId":"465","endLine":17,"endColumn":43},{"ruleId":"462","severity":1,"message":"510","line":22,"column":3,"nodeType":"464","messageId":"465","endLine":22,"endColumn":7},{"ruleId":"462","severity":1,"message":"511","line":26,"column":3,"nodeType":"464","messageId":"465","endLine":26,"endColumn":13},{"ruleId":"462","severity":1,"message":"512","line":29,"column":8,"nodeType":"464","messageId":"465","endLine":29,"endColumn":18},{"ruleId":"462","severity":1,"message":"513","line":30,"column":8,"nodeType":"464","messageId":"465","endLine":30,"endColumn":14},{"ruleId":"514","severity":1,"message":"515","line":50,"column":5,"nodeType":"516","messageId":"471","endLine":50,"endColumn":10},{"ruleId":"462","severity":1,"message":"506","line":2,"column":8,"nodeType":"464","messageId":"465","endLine":2,"endColumn":14},{"ruleId":"462","severity":1,"message":"476","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":13},{"ruleId":"462","severity":1,"message":"506","line":9,"column":8,"nodeType":"464","messageId":"465","endLine":9,"endColumn":14},{"ruleId":"462","severity":1,"message":"510","line":17,"column":3,"nodeType":"464","messageId":"465","endLine":17,"endColumn":7},{"ruleId":"462","severity":1,"message":"522","line":18,"column":3,"nodeType":"464","messageId":"465","endLine":18,"endColumn":7},{"ruleId":"462","severity":1,"message":"551","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":7},{"ruleId":"462","severity":1,"message":"552","line":20,"column":3,"nodeType":"464","messageId":"465","endLine":20,"endColumn":8},{"ruleId":"462","severity":1,"message":"553","line":21,"column":3,"nodeType":"464","messageId":"465","endLine":21,"endColumn":7},{"ruleId":"462","severity":1,"message":"554","line":71,"column":9,"nodeType":"464","messageId":"465","endLine":71,"endColumn":21},{"ruleId":"462","severity":1,"message":"501","line":1,"column":27,"nodeType":"464","messageId":"465","endLine":1,"endColumn":36},{"ruleId":"462","severity":1,"message":"481","line":3,"column":8,"nodeType":"464","messageId":"465","endLine":3,"endColumn":15},{"ruleId":"462","severity":1,"message":"502","line":5,"column":8,"nodeType":"464","messageId":"465","endLine":5,"endColumn":14},{"ruleId":"462","severity":1,"message":"503","line":31,"column":21,"nodeType":"464","messageId":"465","endLine":31,"endColumn":33},{"ruleId":"462","severity":1,"message":"517","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":31},{"ruleId":"462","severity":1,"message":"489","line":10,"column":16,"nodeType":"464","messageId":"465","endLine":10,"endColumn":26},{"ruleId":"462","severity":1,"message":"518","line":11,"column":8,"nodeType":"464","messageId":"465","endLine":11,"endColumn":26},{"ruleId":"497","severity":1,"message":"527","line":76,"column":6,"nodeType":"499","endLine":76,"endColumn":19,"suggestions":"562"},{"ruleId":"462","severity":1,"message":"517","line":9,"column":10,"nodeType":"464","messageId":"465","endLine":9,"endColumn":31},{"ruleId":"462","severity":1,"message":"510","line":10,"column":10,"nodeType":"464","messageId":"465","endLine":10,"endColumn":14},{"ruleId":"462","severity":1,"message":"518","line":11,"column":8,"nodeType":"464","messageId":"465","endLine":11,"endColumn":26},{"ruleId":"497","severity":1,"message":"519","line":66,"column":6,"nodeType":"499","endLine":66,"endColumn":19,"suggestions":"563"},{"ruleId":"462","severity":1,"message":"529","line":3,"column":15,"nodeType":"464","messageId":"465","endLine":3,"endColumn":19},{"ruleId":"462","severity":1,"message":"521","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"530","line":10,"column":8,"nodeType":"464","messageId":"465","endLine":10,"endColumn":15},{"ruleId":"462","severity":1,"message":"523","line":12,"column":10,"nodeType":"464","messageId":"465","endLine":12,"endColumn":30},{"ruleId":"462","severity":1,"message":"531","line":13,"column":10,"nodeType":"464","messageId":"465","endLine":13,"endColumn":26},{"ruleId":"462","severity":1,"message":"524","line":62,"column":9,"nodeType":"464","messageId":"465","endLine":62,"endColumn":24},{"ruleId":"462","severity":1,"message":"532","line":68,"column":19,"nodeType":"464","messageId":"465","endLine":68,"endColumn":29},{"ruleId":"497","severity":1,"message":"533","line":182,"column":6,"nodeType":"499","endLine":182,"endColumn":19,"suggestions":"564"},{"ruleId":"462","severity":1,"message":"501","line":1,"column":17,"nodeType":"464","messageId":"465","endLine":1,"endColumn":26},{"ruleId":"462","severity":1,"message":"504","line":3,"column":23,"nodeType":"464","messageId":"465","endLine":3,"endColumn":34},{"ruleId":"462","severity":1,"message":"505","line":4,"column":10,"nodeType":"464","messageId":"465","endLine":4,"endColumn":24},{"ruleId":"462","severity":1,"message":"521","line":7,"column":8,"nodeType":"464","messageId":"465","endLine":7,"endColumn":14},{"ruleId":"462","severity":1,"message":"522","line":19,"column":3,"nodeType":"464","messageId":"465","endLine":19,"endColumn":7},{"ruleId":"462","severity":1,"message":"523","line":21,"column":10,"nodeType":"464","messageId":"465","endLine":21,"endColumn":30},{"ruleId":"462","severity":1,"message":"508","line":22,"column":10,"nodeType":"464","messageId":"465","endLine":22,"endColumn":27},{"ruleId":"462","severity":1,"message":"524","line":99,"column":9,"nodeType":"464","messageId":"465","endLine":99,"endColumn":24},{"ruleId":"497","severity":1,"message":"525","line":179,"column":6,"nodeType":"499","endLine":179,"endColumn":19,"suggestions":"565"},"no-native-reassign",["566"],"no-negated-in-lhs",["567"],"no-unused-vars","'displayDescriptionBar' is assigned a value but never used.","Identifier","unusedVar","'setDisplayDescriptionBar' is assigned a value but never used.","'userId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","'useMediaQuery' is defined but never used.","'lightBlue' is defined but never used.","'FilterNone' is defined but never used.","'Badge' is defined but never used.","'useRef' is defined but never used.","'Redirect' is defined but never used.","'WalletNewExpense' is defined but never used.","'WalletNewEarnings' is defined but never used.","'isEmpty' is defined but never used.","'setDateFrom' is defined but never used.","'setDateTo' is defined but never used.","'setSubExpenses' is defined but never used.","'setDateFromEarnings' is defined but never used.","'setDateToEarnings' is defined but never used.","'setSubEarnings' is defined but never used.","'setUser' is defined but never used.","'deepOrange' is defined but never used.","'classes' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'errorEarnings' is assigned a value but never used.","'errorExpenses' is assigned a value but never used.","'setErrorExpenses' is assigned a value but never used.","'alertAdd' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["568"],"'useEffect' is defined but never used.","'moment' is defined but never used.","'setIsLoading' is assigned a value but never used.","'useDispatch' is defined but never used.","'setWalletTheme' is defined but never used.","'Button' is defined but never used.","'setExpenses' is defined but never used.","'CenterFocusStrong' is defined but never used.","'FullscreenExit' is defined but never used.","'teal' is defined but never used.","'deepPurple' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'PlayCircleFilledWhite' is defined but never used.","'MonetizationOnIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getTotalSubExpenses'. Either include it or remove the dependency array.",["569"],"'styles' is defined but never used.","'blue' is defined but never used.","'relativeTimeRounding' is defined but never used.","'ExpenseChartRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colorList'. Either include it or remove the dependency array.",["570"],"React Hook useEffect has a missing dependency: 'getTotalSubEarnings'. Either include it or remove the dependency array.",["571"],"'Line' is defined but never used.","'classes' is defined but never used.","'ImportantDevices' is defined but never used.","'setOptions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'subEarnings'. Either include it or remove the dependency array.",["572"],"'MenuTheme' is defined but never used.","'IconButton' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ChatIcon' is defined but never used.","'Snackbar' is defined but never used.","'dateToSelector' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'window.Width'. Either exclude it or remove the dependency array. Outer scope values like 'window.Width' aren't valid dependencies because mutating them doesn't re-render the component.",["573"],"'setEarnings' is defined but never used.","'dateFromSelector' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refreshData'. Either include it or remove the dependency array.",["574"],"React Hook useEffect has missing dependencies: 'dispatch', 'from', and 'to'. Either include them or remove the dependency array.",["575"],"'categoryList' is assigned a value but never used.","'setCategoryList' is assigned a value but never used.","'cyan' is defined but never used.","'amber' is defined but never used.","'grey' is defined but never used.","'colorPalette' is assigned a value but never used.",["566"],["567"],"'Login2' is defined but never used.",["576"],["577"],["578"],["579"],["580"],["581"],["582"],["583"],"no-global-assign","no-unsafe-negation",{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"584","fix":"600"},{"desc":"594","fix":"601"},{"desc":"596","fix":"602"},{"desc":"598","fix":"603"},{"desc":"590","fix":"604"},{"desc":"586","fix":"605"},{"desc":"592","fix":"606"},{"desc":"588","fix":"607"},"Update the dependencies array to be: [dispatch, reload, userId]",{"range":"608","text":"609"},"Update the dependencies array to be: [getTotalSubExpenses, subExpenses]",{"range":"610","text":"611"},"Update the dependencies array to be: [colorList, subExpenses]",{"range":"612","text":"613"},"Update the dependencies array to be: [getTotalSubEarnings, subEarnings]",{"range":"614","text":"615"},"Update the dependencies array to be: [subEarnings, subExpenses]",{"range":"616","text":"617"},"Update the dependencies array to be: []",{"range":"618","text":"619"},"Update the dependencies array to be: [expenses, earnings, refreshData]",{"range":"620","text":"621"},"Update the dependencies array to be: [dispatch, from, to]",{"range":"622","text":"623"},{"range":"624","text":"609"},{"range":"625","text":"619"},{"range":"626","text":"621"},{"range":"627","text":"623"},{"range":"628","text":"615"},{"range":"629","text":"611"},{"range":"630","text":"617"},{"range":"631","text":"613"},[4402,4410],"[dispatch, reload, userId]",[1747,1760],"[getTotalSubExpenses, subExpenses]",[4575,4588],"[colorList, subExpenses]",[1931,1944],"[getTotalSubEarnings, subEarnings]",[4827,4840],"[subEarnings, subExpenses]",[2811,2825],"[]",[4459,4479],"[expenses, earnings, refreshData]",[4720,4722],"[dispatch, from, to]",[4288,4296],[2811,2825],[4386,4406],[4647,4649],[1931,1944],[1747,1760],[4827,4840],[4575,4588]]